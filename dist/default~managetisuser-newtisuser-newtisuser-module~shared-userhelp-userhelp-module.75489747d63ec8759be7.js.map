{"version":3,"sources":["./src/app/managetisuser/newtisuser/newtisuser.component.html","./src/app/managetisuser/newtisuser/newtisuser-routing.module.ts","./src/app/managetisuser/newtisuser/newtisuser.component.css","./src/app/managetisuser/newtisuser/newtisuser.component.ts","./src/app/managetisuser/newtisuser/newtisuser.module.ts","./src/app/shared/model/PasswordChange.ts","./src/app/shared/model/UserDetails.ts","./src/app/shared/model/UserStatus.ts","./src/app/shared/model/tisuser.ts","./src/app/shared/service/tocs-resolver.service.ts"],"names":[],"mappings":"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","file":"default~managetisuser-newtisuser-newtisuser-module~shared-userhelp-userhelp-module.75489747d63ec8759be7.js","sourcesContent":["export default \"<ng-template *ngIf=\\\"cannotViewPage then notShowAddUser ; else showAddUser\\\">\\r\\n</ng-template>\\r\\n<ng-template #notShowAddUser>\\r\\n  <h2>{{'Add_User.No Valid Permission' | translate}}</h2>\\r\\n  <button mat-raised-button (click)=\\\"homePageNav()\\\" type=\\\"button\\\" class=\\\"homePage\\\" color=\\\"primary\\\">\\r\\n    {{'HOME.Ok' | translate}}\\r\\n  </button>\\r\\n</ng-template>\\r\\n<ng-template #showAddUser>\\r\\n  <mat-toolbar class = \\\"applicationTitleToolbar\\\" color=\\\"primary\\\">\\r\\n    <span><img src=\\\"./assets/STAR_logo.png\\\" style=\\\"width:50px;height:50px;padding-top: 10px;\\\"></span>\\r\\n    <div class=\\\"far-end\\\">\\r\\n      <span class=\\\"space-reducer\\\"> {{'HOME.Application name' | translate}}</span>\\r\\n      <span class=\\\"space-reducer\\\"> {{starHubUserTocName}}</span>\\r\\n    </div>\\r\\n    <span class=\\\"filler\\\"></span>\\r\\n    <button mat-button (click)=\\\"homePageNav()\\\" class=\\\"homePage\\\" [disabled]=\\\"saveButtonClicked\\\"  *ngIf=\\\"showToolbarButtons\\\" class=\\\"application-titlebar-text-style\\\">\\r\\n      <mat-icon >home</mat-icon>\\r\\n      <span class=\\\"application-titlebar-text-style\\\">{{'HOME.Home' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-button type=\\\"button\\\"  *ngIf=\\\"showToolbarButtons\\\" [disabled]=\\\"saveButtonClicked\\\" (click)=\\\"logout()\\\" class=\\\"application-titlebar-text-style\\\">\\r\\n      <mat-icon >logout</mat-icon>\\r\\n      <span class=\\\"application-titlebar-text-style\\\">{{'HOME.Logout' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-button type=\\\"button\\\"  (click)=\\\"addUserHelpClick()\\\" *ngIf=\\\"showToolbarButtons\\\" [disabled]=\\\"saveButtonClicked\\\"  class=\\\"application-titlebar-text-style\\\">\\r\\n      <mat-icon>help</mat-icon>\\r\\n      <span class=\\\"application-titlebar-text-style\\\">{{'HOME.Help' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-icon-button type=\\\"button\\\" *ngIf=\\\"!showToolbarButtons\\\" [matMenuTriggerFor]=\\\"menu\\\" class=\\\"application-titlebar-text-style1\\\">\\r\\n      <mat-icon>more_vert</mat-icon>\\r\\n  </button>\\r\\n  </mat-toolbar>\\r\\n  <mat-menu  #menu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item (click)=\\\"homePageNav()\\\">\\r\\n      <span>{{'HOME.Home' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n      <span>{{'HOME.Logout' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-menu-item (click)=\\\"addUserHelpClick()\\\">\\r\\n      <span>{{'HOME.Help' | translate}}</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n  <!-- Header message for screen -->\\r\\n  <fieldset class=\\\"headerFieldset\\\">\\r\\n    <h2 style=\\\"text-align:center\\\" [title]=\\\"title\\\">{{ title }}</h2>\\r\\n  </fieldset>\\r\\n     <mat-card class=\\\"formFieldset-matcard\\\">\\r\\n    <mat-card-content>\\r\\n      <div>\\r\\n        <form [formGroup]=\\\"newUserForm\\\">\\r\\n          <fieldset [disabled]=\\\"saveButtonClicked\\\" class=\\\"formFieldset\\\">\\r\\n             <!-- Show spinner while fetching data from service -->\\r\\n              <div *ngIf=\\\"saveButtonClicked\\\" class=\\\"lds-ellipsis\\\">\\r\\n                <div></div>\\r\\n                <div></div>\\r\\n                <div></div>\\r\\n                <div></div>\\r\\n              </div>\\r\\n            <table>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <p [ngClass]=\\\"{ 'has-error': isSubmitted && formControls.employeeId.errors }\\\">\\r\\n                    <!-- Empluyee ID field -->\\r\\n                    <mat-form-field>\\r\\n                      <mat-label>{{'Add_User.EmpId' | translate}}</mat-label>\\r\\n                      <input tabindex=\\\"1\\\" formControlName=\\\"employeeId\\\" matInput required minlength=\\\"1\\\" onkeypress=\\\"return /[a-zA-Z0-9]/i.test(event.key)\\\" maxlength=\\\"12\\\" name=\\\"employeeId\\\"\\r\\n                        required>\\r\\n                      <mat-error *ngIf=\\\"newUserForm.invalid\\\">{{'Add_User.EmployeeId Validation' | translate}}\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                </td>\\r\\n                <td class=\\\"tablePaddingAlign\\\" rowspan=\\\"4\\\">\\r\\n                  <!-- Roles field -->\\r\\n                  <fieldset class=\\\"roleFieldset\\\" style=\\\"width:160px\\\">\\r\\n                    <legend>{{'Add_User.RoleOutLine' | translate}}</legend>\\r\\n                    <!-- Handle if roles are available or show message for no roles -->\\r\\n                    <div class=\\\"rolesFieldset\\\">\\r\\n                      <ng-template *ngIf=\\\"showHideRoles;then showBlock; else notShowBlock\\\">\\r\\n                      </ng-template>\\r\\n                      <ng-template #showBlock>\\r\\n                        <ng-container *ngFor=\\\"let role of roles\\\"> \\r\\n                          <mat-checkbox class=\\\"checkBoxDisplay\\\" [disabled]=\\\"disableEnableRoles || saveButtonClicked\\\" tabindex=\\\"8\\\"\\r\\n                            [checked]=\\\"role.isChecked\\\" align='left' formArrayName=\\\"roles\\\"\\r\\n                            (change)=\\\"changeSelectedRole($event)\\\" [value]=\\\"role.id\\\" required>\\r\\n                            {{role.description}}\\r\\n                          </mat-checkbox>\\r\\n                        </ng-container>\\r\\n                      </ng-template>\\r\\n                      <ng-template #notShowBlock>\\r\\n                        {{'Add_User.NO_ROLES_EXISTS' | translate}}\\r\\n                      </ng-template>\\r\\n                    </div>\\r\\n                  </fieldset>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <p [ngClass]=\\\"{ 'has-error': isSubmitted && formControls.firstName.errors }\\\">\\r\\n                    <!-- First Name field -->\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                      <mat-label>{{'Add_User.FirstName' | translate}}</mat-label>\\r\\n                      <input tabindex=\\\"2\\\" formControlName=\\\"firstName\\\" onkeypress=\\\"return /[a-z]/i.test(event.key)\\\" (input)=\\\"userDataModified()\\\" maxlength=\\\"16\\\"\\r\\n                        matInput required name=\\\"firstName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"newUserForm.invalid\\\">{{'Add_User.FirstName Validation' | translate}}</mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <p [ngClass]=\\\"{ 'has-error': isSubmitted && formControls.lastName.errors }\\\">\\r\\n                    <!-- Last name field -->\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                      <mat-label>{{'Add_User.LastName' | translate}}</mat-label>\\r\\n                      <input tabindex=\\\"3\\\" formControlName=\\\"lastName\\\" onkeypress=\\\"return /[a-z]/i.test(event.key)\\\" (input)=\\\"userDataModified()\\\" maxlength=\\\"35\\\"\\r\\n                        matInput name=\\\"lastName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"newUserForm.invalid\\\">{{'Add_User.LastName Validation' | translate}}</mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <p [ngClass]=\\\"{ 'has-error': isSubmitted && formControls.emailAddress.errors }\\\">\\r\\n                    <!-- Email Address field -->\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                      <mat-label>{{'Add_User.EmailID' | translate}}</mat-label>\\r\\n                      <input tabindex=\\\"4\\\" matInput=\\\"email\\\" (input)=\\\"userDataModified()\\\" formControlName=\\\"emailAddress\\\">\\r\\n                      <mat-error *ngIf=\\\"newUserForm.invalid\\\">{{'Add_User.Email Validation' | translate}}</mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <ng-container *ngIf=\\\"hasDeletePermissions\\\">\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <ng-container *ngIf=\\\"edit\\\">\\r\\n                      <!-- New user field -->\\r\\n                      <mat-checkbox tabindex=\\\"5\\\" name=\\\"markUserActiveInactive\\\" [checked]=\\\"setUserActiveInactive\\\"\\r\\n                        (change)=\\\"changeUserStatus($event)\\\">\\r\\n                        {{activeInactiveCaption}}</mat-checkbox>\\r\\n                    </ng-container>\\r\\n                  </td>\\r\\n                  <td class=\\\"termination-date\\\">\\r\\n                    <ng-container class=\\\"termination-date\\\" *ngIf=\\\"showHideTerminationDate\\\">\\r\\n                      <mat-label class=\\\"termination-date\\\">{{'Edit_User.TerminationDate' | translate}}\\r\\n                        {{populateUserDetail.terminationDate |  date:'dd MMMM yyyy'}}</mat-label>\\r\\n                    </ng-container>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-container>\\r\\n              <tr>\\r\\n                <td class=\\\"tableForcePasswordChangePadding\\\">\\r\\n                  <ng-container *ngIf=\\\"edit\\\">\\r\\n                    <!-- New user field -->\\r\\n                    <mat-checkbox tabindex=\\\"6\\\" name=\\\"forcePasswordChange\\\" [disabled]=\\\"disableEnableForcedPwdChange\\\"\\r\\n                      [checked]=\\\"isForcedPwdChangeRequired\\\" (change)=\\\"changeForcePasswordChange($event)\\\">\\r\\n                      {{'Edit_User.ForcePasswordChange' | translate}}</mat-checkbox>\\r\\n                  </ng-container>\\r\\n                </td>\\r\\n                <td></td>\\r\\n              </tr>\\r\\n            </table>\\r\\n\\r\\n            <!-- Save and Reset button enable/disable based on different criteria Add/Edit/Form No Dirty etc.. -->\\r\\n            <ng-template *ngIf=\\\"edit; then saveDisableForEdit; else saveForNewUser\\\">\\r\\n            </ng-template>\\r\\n            <ng-template #saveDisableForEdit>\\r\\n              <p>\\r\\n                <button tabindex=\\\"9\\\"  mat-button class = \\\"button-style\\\" mat-raised-button\\r\\n                  [disabled]=\\\"!newUserForm.valid || !formEdited || saveButtonClicked\\\" (click)=\\\"save()\\\" type=\\\"button\\\"\\r\\n                  color=\\\"primary\\\">{{'Add_User.Save' | translate}}</button>\\r\\n                <button tabindex=\\\"10\\\"  mat-button class = \\\"button-style\\\" mat-raised-button\\r\\n                  [disabled]=\\\"!formEdited || saveButtonClicked\\\" (click)=\\\"reset()\\\" type=\\\"button\\\"\\r\\n                  color=\\\"primary\\\"> {{'Add_User.Reset' | translate}}\\r\\n                </button>\\r\\n              </p>\\r\\n            </ng-template>\\r\\n            <ng-template #saveForNewUser>\\r\\n              <p>\\r\\n                <button tabindex=\\\"9\\\"  mat-button class = \\\"button-style\\\" mat-raised-button [disabled]=\\\"!newUserForm.valid || saveButtonClicked\\\"\\r\\n                  (click)=\\\"save()\\\" type=\\\"button\\\" \\r\\n                  color=\\\"primary\\\">{{'Add_User.Save' | translate}}</button>\\r\\n              </p>\\r\\n            </ng-template>\\r\\n          </fieldset>\\r\\n        </form>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</ng-template>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {NewtisuserComponent} from './newtisuser.component';\r\nimport { UserDetailsResolverService } from 'src/app/shared/service/user-details-resolver.service';\r\nimport { TocsResolverService } from 'src/app/shared/service/tocs-resolver.service';\r\nimport { LandingPageResolverService } from 'src/app/shared/service/landing-page-resolver.service';\r\n\r\n/**\r\n * Routes defined for Addition and Updation of TIS users along with resolver services\r\n */\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewtisuserComponent,\r\n    resolve: {userDetail : UserDetailsResolverService, tocs: TocsResolverService, landingPage : LandingPageResolverService}\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NewtisuserRoutingModule { }\r\n","export default \"/* @import \\\"~@angular/material/prebuilt-themes/indigo-pink.css\\\"; */\\r\\n.newUserForm{\\r\\n    min-width: 150px;\\r\\n    max-width: 450px;\\r\\n    width: 100%;\\r\\n  }\\r\\nmat-form-field {\\r\\n    /* color: #FFBF00 !important; */\\r\\n    margin-left: 10px;\\r\\n    font-size: 1.0em!important;\\r\\n}\\r\\nmat-checkbox {\\r\\n    margin-left: 10px;\\r\\n}\\r\\n.lastname{\\r\\nbackground-color: white;\\r\\n}\\r\\n.fieldset {\\r\\n    padding-left: 40px;\\r\\n    display: inline-block;\\r\\n   \\r\\n}\\r\\n.termination-date {\\r\\n    margin-left: 20px;\\r\\n}\\r\\n.toc-width {\\r\\n    width: 255px;\\r\\n    max-width: 255px;\\r\\n}\\r\\nbutton {\\r\\n    margin-left: 10px;\\r\\n}\\r\\n.formFieldset {\\r\\n    background-color: #EFEFEF; \\r\\n    min-width: 500px;\\r\\n    width: 32%;\\r\\n    border: white;\\r\\n    box-shadow:0 0 10px #666;\\r\\n   }\\r\\n.formFieldset-matcard {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    margin-top: 1%; \\r\\n    padding-top: 0%;\\r\\n    min-width: 500px; \\r\\n    -webkit-box-pack: center; \\r\\n            justify-content: center; \\r\\n    -webkit-box-align: center; \\r\\n            align-items: center\\r\\n   }\\r\\n.filler {\\r\\n    -webkit-box-flex: 1;\\r\\n            flex: 1 1 auto;\\r\\n }\\r\\n.applicationTitleToolbar {\\r\\n    background-color: #3C3C35;\\r\\n    border:1px solid #666;\\r\\n    border-radius:10px;\\r\\n    box-shadow:0 0 10px #666;\\r\\n}\\r\\n.roleFieldset {\\r\\n    border: 0;\\r\\n}\\r\\n.headerFieldset {\\r\\n      background-color:#C5C5BF;\\r\\n      line-height: 20%;\\r\\n      border:1px solid #666;\\r\\n      border-radius:10px;\\r\\n      box-shadow:0 0 10px #666;\\r\\n  }\\r\\n.application-titlebar-text-style{\\r\\n    /* color: white;\\r\\n    border: transparent;\\r\\n    font-size: medium; */\\r\\n    width: auto;\\r\\n}\\r\\n.icon-color{\\r\\n    background-color: white;\\r\\n  }\\r\\n.menu-overflow-hidden {\\r\\n    overflow: hidden !important;\\r\\n  }\\r\\n.application-titlebar-text-style1{\\r\\n  color: white;\\r\\n  font-size: medium;\\r\\n  text-align: center;\\r\\n  background-color: transparent;\\r\\n  border: transparent;\\r\\n}\\r\\n.tablePaddingAlign{\\r\\n    padding-left: 10px;\\r\\n    vertical-align : top;\\r\\n    padding-top: 28px;\\r\\n}\\r\\n.mat-button:hover {\\r\\n    background: #455a64;\\r\\n  }\\r\\n.tableTocPadding{\\r\\n    padding-left: 10px;\\r\\n    padding-top: 0px;\\r\\n}\\r\\n.tableForcePasswordChangePadding{\\r\\n    padding-top: 5px;\\r\\n}\\r\\n.checkBoxDisplay {\\r\\n    display: block;\\r\\n    /* background-color: #C5C5BF; */\\r\\n  }\\r\\n.rolesFieldset {\\r\\n    width: 258px;\\r\\n    max-width: 260px;\\r\\n    max-height: 250px;\\r\\n    overflow-y: auto;\\r\\n    overflow-x: auto;\\r\\n    border: 1px solid black;\\r\\n\\r\\n}\\r\\n::ng-deep .mat-checkbox .mat-checkbox-frame {\\r\\n    border-color: #C5C5BF;\\r\\n  }\\r\\n/* ::ng-deep .mat-checkbox-focused .mat-checkbox-focused {\\r\\n    background-color: darkgreen !important;\\r\\n  }\\r\\n  \\r\\n  ::ng-deep .mat-checkbox-checked .mat-checkbox-background {\\r\\n    background-color: darkgreen !important;\\r\\n  } */\\r\\n.far-end{\\r\\n    font-size: medium;\\r\\n    padding-left: 7px;\\r\\n    padding-top: 7px;\\r\\n    display: inline-grid;\\r\\n    margin-bottom: auto;\\r\\n    color: white;\\r\\n    font-style: italic;\\r\\n    }\\r\\n.space-reducer{\\r\\n    max-height: 20px;\\r\\n}\\r\\n.button-style{\\r\\n    /* background-color: #263238;\\r\\n    color: white;\\r\\n    width: 80px; */\\r\\n    font-size: medium;\\r\\n    /* height: 30px; */\\r\\n}\\r\\n.lds-ellipsis {\\r\\n  background-color: #EFEFEF; \\r\\n  position: absolute;\\r\\n  width: 10px;\\r\\n  height: 5px;\\r\\n  top: 1.2%;\\r\\n  left: 45%;\\r\\n}\\r\\n.lds-ellipsis div {\\r\\n  position: absolute;\\r\\n  top: 2px;\\r\\n  width: 8px;\\r\\n  height: 8px;\\r\\n  border-radius: 50%;\\r\\n  background:#3C3C35;\\r\\n  -webkit-animation-timing-function: cubic-bezier(0, 1, 1, 0);\\r\\n          animation-timing-function: cubic-bezier(0, 1, 1, 0);\\r\\n}\\r\\n.lds-ellipsis div:nth-child(1) {\\r\\n  left: 8px;\\r\\n  -webkit-animation: lds-ellipsis1 0.6s infinite;\\r\\n          animation: lds-ellipsis1 0.6s infinite;\\r\\n}\\r\\n.lds-ellipsis div:nth-child(2) {\\r\\n  left: 8px;\\r\\n  -webkit-animation: lds-ellipsis2 0.6s infinite;\\r\\n          animation: lds-ellipsis2 0.6s infinite;\\r\\n}\\r\\n.lds-ellipsis div:nth-child(3) {\\r\\n  left: 32px;\\r\\n  -webkit-animation: lds-ellipsis2 0.6s infinite;\\r\\n          animation: lds-ellipsis2 0.6s infinite;\\r\\n}\\r\\n.lds-ellipsis div:nth-child(4) {\\r\\n  left: 56px;\\r\\n  -webkit-animation: lds-ellipsis3 0.6s infinite;\\r\\n          animation: lds-ellipsis3 0.6s infinite;\\r\\n}\\r\\n@-webkit-keyframes lds-ellipsis1 {\\r\\n  0% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: scale(1);\\r\\n            transform: scale(1);\\r\\n  }\\r\\n}\\r\\n@keyframes lds-ellipsis1 {\\r\\n  0% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: scale(1);\\r\\n            transform: scale(1);\\r\\n  }\\r\\n}\\r\\n@-webkit-keyframes lds-ellipsis3 {\\r\\n  0% {\\r\\n    -webkit-transform: scale(1);\\r\\n            transform: scale(1);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n}\\r\\n@keyframes lds-ellipsis3 {\\r\\n  0% {\\r\\n    -webkit-transform: scale(1);\\r\\n            transform: scale(1);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n}\\r\\n@-webkit-keyframes lds-ellipsis2 {\\r\\n  0% {\\r\\n    -webkit-transform: translate(0, 0);\\r\\n            transform: translate(0, 0);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: translate(24px, 0);\\r\\n            transform: translate(24px, 0);\\r\\n  }\\r\\n}\\r\\n@keyframes lds-ellipsis2 {\\r\\n  0% {\\r\\n    -webkit-transform: translate(0, 0);\\r\\n            transform: translate(0, 0);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: translate(24px, 0);\\r\\n            transform: translate(24px, 0);\\r\\n  }\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NGXLogger } from 'ngx-logger';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { Constants } from 'src/app/shared/utils/constants';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\r\nimport { NewUser } from 'src/app/shared/model/tisuser';\r\nimport { Language } from 'src/app/shared/model/Language';\r\nimport { Toc } from 'src/app/shared/model/Toc';\r\nimport { UserType } from 'src/app/shared/model/UserType';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport { UserManagementService } from 'src/app/shared/service/user-management.service';\r\nimport { StarApp } from 'src/app/shared/model/StarApp';\r\nimport { ErrorConstants } from 'src/app/shared/utils/errorconstants';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ErrorLogging } from 'src/app/shared/model/ErrorLogging';\r\nimport { Role } from 'src/app/shared/model/Role';\r\nimport { UserDetails } from 'src/app/shared/model/UserDetails';\r\nimport { constants } from 'os';\r\nimport { PasswordChange } from 'src/app/shared/model/PasswordChange';\r\nimport { UserStatus } from 'src/app/shared/model/UserStatus';\r\nimport { AuthResponse } from 'src/app/shared/model/AuthResponse';\r\nimport { AuthAttributes } from 'src/app/shared/model/AuthAttributes';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmDialogModel, ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { LocationStrategy } from '@angular/common';\r\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\r\nimport { Auth } from 'aws-amplify';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n/**\r\n * User Maintenance related code to capture details from the form.\r\n * Make API call with given parameters and render the results.\r\n */\r\n@Component({\r\n  selector: 'app-newtisuser',\r\n  templateUrl: './newtisuser.component.html',\r\n  styleUrls: ['./newtisuser.component.css']\r\n})\r\nexport class NewtisuserComponent implements OnInit {\r\n  /** Propeties to hold class values. */\r\n  /** Form group is required to hold the input values entered in the form. */\r\n  public newUserForm: FormGroup;\r\n  /** To specify default language in which the form will appear. */\r\n  private _defaultLang: string;\r\n\r\n  /**\r\n   * Accessor for the defaultLang property.\r\n   * @return Current value of the language property.\r\n   */\r\n  public get defaultLang(): string {\r\n    return this._defaultLang;\r\n  }\r\n\r\n  /**\r\n   * Mutator for the defaultLang property.\r\n   * @param language New value of the language property.\r\n   */\r\n  public set defaultLang(value: string) {\r\n    this._defaultLang = value;\r\n  }\r\n\r\n  /** This is used to set form fields for post call to the user service. */\r\n  postApiCallTestResponse: string;\r\n  /** This is member variable used to capture response received from post api call. */\r\n  createdUserResponse: NewUser;\r\n  /** This is member variable used to capture response received from put api call. */\r\n  updatedUserResponse: UserDetails;\r\n  /**\r\n   * This is member variable used to capture error response received\r\n   * from interceptor for post/put api call.\r\n   */\r\n  errorMessagelogging: ErrorLogging;\r\n  /** Show 'No Roles available' if no roles fetched from API else show all the roles fetched from API. */\r\n  showHideRoles: boolean = false;\r\n  /** Holds selected application id and used to send while fetching roles from TOCs dropdown. */\r\n  selectedAppId: number;\r\n  /** Boolean variable to handle enable/disable of Save button until service response not received. */\r\n  saveButtonClicked: boolean = false;\r\n  /** This array is used for specifying user types. */\r\n  userTypes: UserType[] = [\r\n    { value: Constants.LIVE_USER_CODE, display: 'Live User' }\r\n  ];\r\n\r\n  /** This array is used for specifying lanuages in the drop down. */\r\n  languages: Language[] = [\r\n    { value: Constants.DEFAULT_LANGUAGE_CODE, display: 'English UK' }\r\n  ];\r\n\r\n  /** This array is used for specifying default Star mobile app. */\r\n  applicationNames: StarApp[] = [\r\n    { val: Constants.STAR_MOBILE_APP_CODE, disp: 'STARMobile app' }\r\n  ];\r\n\r\n  /** Array object to hold user details for edit returned from API. */\r\n  userDetails: UserDetails[] = [];\r\n  /** \r\n   * UserDetails object to hold user details returned from API for edit and \r\n   * use this object as a master copy of data returned from API for edit.\r\n   * Also values of this object can be used for comparing \r\n   * any changes happened in record details returned from API for edit.\r\n   */\r\n  userDetail: UserDetails;\r\n  /** \r\n   * UserDetails object to copy the values returned from API for edit \r\n   * and patch values into controls. Also as this is titely coupled with controls, \r\n   * so whatever values we cahnge in controls those automatically reflected in this object. \r\n   * Values from same object can be used to send for updating user details to API.\r\n   */\r\n  populateUserDetail: UserDetails;\r\n\r\n  /** Member variable to store Tocs returned from API and Bind with control. */\r\n  tocs: Toc[] = [];\r\n\r\n  /** Member variable to roles to store roles returned from API and Bind with control. */\r\n  roles: Role[] = [];\r\n\r\n  /**\r\n   * Member variable to bind with new password control and use its value to pass while\r\n   * calling API.\r\n   */\r\n  isForcedPwdChangeRequired: boolean = false;\r\n\r\n  /**\r\n   * Member variable to bind with markUserActiveInactive control and use its value to pass while\r\n   * calling API.\r\n   */\r\n  setUserActiveInactive: boolean = false;\r\n\r\n  /** Member variable disable/enable new password control. */\r\n  disableEnableForcedPwdChange: boolean = false;\r\n\r\n  /**\r\n   * Member variable disable/enable roles controls\r\n   * based on status of user returned from API.\r\n   */\r\n  disableEnableRoles: boolean = false;\r\n\r\n  /** Member variable to show/hide termination date label. */\r\n  showHideTerminationDate: boolean = false;\r\n\r\n  /**\r\n   * PasswordChange object to update as per check box selection and\r\n   * pass this object to api for updating into DB.\r\n   */\r\n  passwordChange: PasswordChange;\r\n\r\n  /** UserStatus object to pass this object to api for updating into DB. */\r\n  userStatus: UserStatus;\r\n\r\n  /**\r\n   * Member variable to roles to store roles returned from API for editable\r\n   * user and Bind with control.\r\n   */\r\n  userRoles: number[] = [];\r\n\r\n  /** Supported application languages. */\r\n  lang: string[] = Constants.SUPPORTED_LANGUAGES;\r\n\r\n  /** Field for diffrentiating if edit user is to be loaded or new user. */\r\n  editUser: string = Constants.EDIT;\r\n  /** Member boolian variable to check for form is in edit mode. */\r\n  edit: boolean = false;\r\n  /** Member variable to keep save button disable when first time form loads in edit mode and so on. */\r\n  formEdited: boolean = false;\r\n  /** Member variable to handle pop-up message if form is edited and user wants to leave */\r\n  windowSelectionCheck: boolean = false;\r\n\r\n  /**Set flag to hide/display edit user button after validating permissions. */\r\n  hasEditPermissions: boolean = false;\r\n\r\n  /** Set flag to hide/display edit user button after validating permissions. */\r\n  hasAddPermissions: boolean = false;\r\n\r\n  /** \r\n   * Set flag to hide/display inActive checkbox and Terminationdate label \r\n   * after validating permissions. \r\n   */\r\n  hasDeletePermissions: boolean = false;\r\n\r\n  /** Member variable to store response from resolver service. */\r\n  currentUserInfo: any;\r\n\r\n  /** Member variable for storing star hub user TOC. */\r\n  starHubUserToc: string = \"\";\r\n\r\n  /** Member variable for storing star hub user TOC Name. */\r\n  starHubUserTocName: string = \"\";\r\n\r\n  /** \r\n   * Member variable to hold caption of activeInactive \r\n   * checkbox based earlier user status. \r\n   */\r\n  activeInactiveCaption: string = \"\";\r\n\r\n  /** Flag to allow or restrict viewing the add/edit component as per valid permissions. */\r\n  cannotViewPage: boolean = false;\r\n\r\n  /** Member variable to store and check URL for add or edit. */\r\n  href: string = \"\";\r\n\r\n  /** Member variable to identify and set the page title as per Add/edit. */\r\n  title: string = \"\";\r\n\r\n  /** Capture Ok/Cancel value returned from value changed alert messgae from user. */\r\n  alertResult: boolean = false;\r\n\r\n  /** Watches for media changes to support responsive changes to content. */\r\n  flexMediaWatcher: Subscription;\r\n\r\n  /** Holds current screen width, updated as a result of media change. */\r\n  currentScreenWidth: string = '';\r\n\r\n  /** Show/hide toolbar buttons based on screen width.  */\r\n  showToolbarButtons: boolean = true;\r\n\r\n  /**\r\n   * Constructor with injected route, NGXLogger, formBuilder, router, userManagementService,\r\n   * location, media, translate, toastr, dialog.\r\n   * @param route - The route that resulted in the loading of this page.\r\n   * @param logger - Loggers to maintain application logs.\r\n   * @param formBuilder - Instance of form builder to control form related events.\r\n   * @param router - Roter object used to navigate on different pages.\r\n   * @param userManagementService - Instance of created service to call different services.\r\n   * @param media - Obser service of media to get the size of screen. \r\n   * @param translate - Service that translates messages to other languages.\r\n   * @param toastr - Toaster Service to show success and error banners.\r\n   * @param dialog - Mat Dialog instance to popup confirmation message on page. \r\n   */\r\n  constructor(private route: ActivatedRoute,\r\n    private logger: NGXLogger,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private userManagementService: UserManagementService,\r\n    private media: MediaObserver,\r\n    public translate: TranslateService,\r\n    public toastr: ToastrManager,\r\n    public dialog: MatDialog) {\r\n    this.defaultLang = Constants.DEFAULT_LANGUAGE;\r\n    translate.addLangs(this.lang);\r\n    translate.setDefaultLang(this.defaultLang);\r\n    this.passwordChange = new PasswordChange();\r\n\r\n    this.flexMediaWatcher = media.media$.subscribe((change: MediaChange) => {\r\n      if (change.mqAlias !== this.currentScreenWidth) {\r\n        this.currentScreenWidth = change.mqAlias;\r\n        this.setupTable();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Define columns to be displayed as screen width changes. */\r\n  private setupTable() {\r\n    if (this.currentScreenWidth == 'xs' || this.currentScreenWidth == 'sm') {\r\n      this.showToolbarButtons = false;\r\n    } else {\r\n      this.showToolbarButtons = true;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Implement OnInit's `ngOnInit` method\r\n   * Read form controls using form builder.\r\n   */\r\n  ngOnInit() {\r\n    //Reading data for current user info from resolver to find star hub user info.\r\n    this.currentUserInfo = this.route.snapshot.data[Constants.LANDING_PAGE_RESOLVER_FIELD];\r\n    let authResponse = new AuthResponse(this.currentUserInfo);\r\n    this.hasAddPermissions = authResponse.hasAddPermissions;\r\n    this.hasEditPermissions = authResponse.hasEditPermissions;\r\n    this.hasDeletePermissions = authResponse.hasDeletePermissions;\r\n    this.starHubUserToc = authResponse.defaultToc;\r\n    // Read the parameters from URL. \r\n    const parameters = this.route.snapshot.paramMap;\r\n    // Call createUserForm() method to create user form.\r\n    this.createUserForm();\r\n\r\n    const selectDefaultUserType = this.userTypes.find(c => c.value == Constants.LIVE_USER_CODE);\r\n    this.newUserForm.get('userType').setValue(selectDefaultUserType.value);\r\n    const defaultAppName = this.applicationNames.find(c => c.val == Constants.STAR_MOBILE_APP_CODE);\r\n    this.newUserForm.get('Applications').setValue(defaultAppName.val);\r\n\r\n    this.href = this.router.url;\r\n    if (this.href.includes(Constants.EDIT)) {\r\n      this.title = Constants.TITLE_EDIT_USERS;\r\n      if (!this.hasEditPermissions) {\r\n        this.cannotViewPage = true;\r\n      }\r\n    } else if (this.href.includes(Constants.USER_FORM)) {\r\n      this.title = Constants.TITLE_ADD_USERS;\r\n      if (!this.hasAddPermissions) {\r\n        this.cannotViewPage = true;\r\n      }\r\n    }\r\n    // Load user deatils using Resolver service.\r\n    this.userDetails = this.route.snapshot.data['userDetail'];\r\n    if (this.userDetails && this.userDetails.length > 0) {\r\n      this.userDetail = this.userDetails[0];\r\n      this.edit = true;\r\n      this.patchValuesToFormFields();\r\n    } else {\r\n      if (this.href.includes(Constants.USER_FORM)) {\r\n        this.fetchTocRoles(this.starHubUserToc);\r\n      } else {\r\n        //Navigates to the landing page in case it is an invalid url.\r\n        this.router.navigate([Constants.USER_LIST_FORM]);\r\n      }\r\n    }\r\n    // Load tocs using Resolver service.\r\n    this.tocs = this.route.snapshot.data['tocs'];\r\n    // Sort TOCs data in ascending order.\r\n    if (this.tocs != null) {\r\n      let filterResult: any = this.tocs.filter(u =>\r\n        u.internalTocCode == this.starHubUserToc);\r\n      if (filterResult != null && filterResult.length > 0) {\r\n        let tocObject: Toc = <Toc>filterResult[0];\r\n        this.starHubUserTocName = tocObject.toc;\r\n      }\r\n      this.tocs.sort((a, b) => a.toc.localeCompare(b.toc));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to navigate to add/edit user help page.\r\n   */\r\n  addUserHelpClick() {\r\n    //Check if user is adding or editing a user.\r\n    if (this.edit) {\r\n      localStorage.setItem('sourcePageOfHelp', Constants.EDIT_USER_FORM);\r\n    } else {\r\n      localStorage.setItem('sourcePageOfHelp', Constants.ADD_USER_FORM);\r\n    }\r\n     //Navigate to add/ edit user help page.\r\n    window.open(Constants.USER_HELP_FORM, \"umUserHelp\");\r\n  }\r\n\r\n  /**\r\n   * Create user form with validators.\r\n   */\r\n  createUserForm() {\r\n    this.newUserForm = this.formBuilder.group({\r\n      employeeId: ['', Validators.compose([Validators.required,\r\n      Validators.minLength(Constants.EMP_ID_MIN_LENGTH), Validators.pattern('^[a-zA-Z0-9\\']+')])],\r\n      firstName: ['', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z\\']+')])],\r\n      lastName: ['', Validators.compose([Validators.required, , Validators.pattern('^[a-zA-Z\\']+')])],\r\n      emailAddress: ['', [Validators.email]],\r\n      Applications: ['', Validators.required],\r\n      languageCode: [Constants.DEFAULT_LANGUAGE_CODE, Validators.required],\r\n      toc: [this.starHubUserToc, Validators.required],\r\n      password: [Constants.DEFAULT_PASSWORD],\r\n      userType: ['', Validators.required],\r\n      operatorId: [''],\r\n      manualPriceAuthorisation: [Constants.MANUAL_PRICE_AUTH_CODE],\r\n      storeId: [Constants.STORE_ID],\r\n      roles: this.formBuilder.array(this.roles, Validators.required),\r\n      forcePasswordChange: []\r\n    });\r\n  }\r\n\r\n  /**\r\n   *  Patch values to the fields on loading the form for edit for the user selected from user list\r\n   *  resettin these values when user selects reset of the edited form values in the edit user page.\r\n   */\r\n  patchValuesToFormFields() {\r\n    if (this.edit == true) {\r\n      if (this.userDetail != null) {\r\n        this.populateUserDetail = Object.assign({}, this.userDetail);\r\n        // Applying logic of Deep copy to keep original roles returned from API for editable user seperate\r\n        // than binding objects and later on when user click on reset button\r\n        // these same roles can be copied to control binding objects.\r\n        if (this.userRoles.length > 0) {\r\n          this.userDetail.roles = [];\r\n          this.populateUserDetail.roles = [];\r\n          for (let i = 0; i < this.userRoles.length; i++) {\r\n            this.userDetail.roles.push(this.userRoles[i]);\r\n            this.populateUserDetail.roles.push(this.userRoles[i]);\r\n          }\r\n        } else {\r\n          for (let i = 0; i < this.userDetail.roles.length; i++) {\r\n            this.userRoles.push(this.userDetail.roles[i]);\r\n          }\r\n        }\r\n        // ToDo: Later on this can also be fetched using resolver service for editing user\r\n        this.fetchTocRoles(this.populateUserDetail.toc);\r\n        // Populate force password member variable with value returned from API\r\n        if (this.userDetail.forcePwdChange) {\r\n          this.isForcedPwdChangeRequired = true;\r\n          this.disableEnableForcedPwdChange = true;\r\n          this.passwordChange.isForcedPwdChangeRequired = true;\r\n        } else {\r\n          this.isForcedPwdChangeRequired = false;\r\n          this.passwordChange.isForcedPwdChangeRequired = false;\r\n          this.disableEnableForcedPwdChange = false;\r\n        }\r\n        // Populate markUserActiveInactive control with value returned from API\r\n        if (!this.userDetail.terminationDate || this.userDetail.terminationDate == null) {\r\n          this.disableEnableRoles = false;\r\n          this.setUserActiveInactive = false;\r\n          this.showHideTerminationDate = false;\r\n          this.activeInactiveCaption = Constants.MAKE_INACTIVE;\r\n        } else {\r\n          this.showHideTerminationDate = true;\r\n          this.activeInactiveCaption = Constants.MAKE_ACTIVE;\r\n          this.setUserActiveInactive = false;\r\n          this.disableEnableRoles = true;\r\n          this.disableEnableForcedPwdChange = true;\r\n          this.newUserForm.controls['firstName'].disable();\r\n          this.newUserForm.controls['lastName'].disable();\r\n          this.newUserForm.controls['emailAddress'].disable();\r\n          this.newUserForm.controls['roles'].disable();\r\n          this.newUserForm.controls['forcePasswordChange'].disable();\r\n        }\r\n\r\n        // Populate fields using returned object from API for edit.\r\n        this.newUserForm.patchValue({\r\n          employeeId: this.populateUserDetail.employeeId,\r\n          toc: this.populateUserDetail.toc,\r\n          firstName: this.populateUserDetail.firstName,\r\n          lastName: this.populateUserDetail.lastName,\r\n          role: this.populateUserDetail.roles,\r\n          emailAddress: this.populateUserDetail.emailAddress\r\n        });\r\n\r\n        this.newUserForm.controls['employeeId'].disable();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Capture selected Application's value from drop down use the same later on while\r\n   * fetching Roles from API.\r\n   * @param event - To be used to get selected Application's value from Application drop down\r\n   */\r\n  changeSelectedApplication(event: any) {\r\n    this.selectedAppId = event.value;\r\n  }\r\n\r\n  /**\r\n   * Capture checked/unchecked value of forcePasswordChange checkbox.\r\n   * @param event - To be used to get forcePasswordChange checkbox checked value.\r\n   */\r\n  changeForcePasswordChange(event: any) {\r\n    this.formEdited = true;\r\n    this.isForcedPwdChangeRequired = event.checked;\r\n    this.passwordChange.isForcedPwdChangeRequired = event.checked;\r\n    if (event.checked) {\r\n      this.setUserActiveInactive = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to control auth logout. User will be redirected to \r\n   * login page. Also, all local storage/cache for  \r\n   * page size would be cleared.\r\n   */\r\n  logout() {\r\n    Auth.signOut().then(x => {\r\n      //Clearing the local storage when the user has signed out.\r\n      localStorage.clear();\r\n      //Redirecting the user to login page after validating that\r\n      //the current user is not logged in.\r\n      const redirectUrlParams = window.location.href;\r\n      window.location.href = environment.auth_ui_url + '?redirect=' + redirectUrlParams;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Capture checked/unchecked value of setUserInActive checkbox\r\n   * @param event - To be used to get setUserInActive checkbox checked value\r\n   */\r\n  changeUserStatus(event: any) {\r\n    if (!this.disableEnableForcedPwdChange && this.isForcedPwdChangeRequired) {\r\n      this.isForcedPwdChangeRequired = false;\r\n      this.passwordChange.isForcedPwdChangeRequired = false;\r\n    }\r\n    this.formEdited = true;\r\n    this.setUserActiveInactive = event.checked;\r\n  }\r\n\r\n  /**\r\n   * User fields modified event.\r\n   */\r\n  userDataModified() {\r\n    if (this.edit) {\r\n      this.formEdited = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to handle home page navigation click event\r\n   */\r\n  homePageNav() {\r\n    if (this.edit && this.newUserForm.valid && this.formEdited == true) {\r\n\r\n      const dialogData = new ConfirmDialogModel();\r\n      const dialogRef = this.dialog.open(ConfirmDialogComponent, { data: dialogData });\r\n\r\n      dialogRef.afterClosed().subscribe(dialogResult => {\r\n        this.alertResult = dialogResult;\r\n        if (this.alertResult) {\r\n          this.router.navigate([Constants.USER_LIST_FORM]);\r\n        }\r\n      });\r\n    } else {\r\n      this.router.navigate([Constants.USER_LIST_FORM]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch TOC roles from API\r\n   * @param tocCode The TOC code for which roles are required.\r\n   * @return The list of roles available for the the given TOC.\r\n   */\r\n  fetchTocRoles(tocCode: string) {\r\n    this.logger.info('TOC Code send to service for pulling out roles details :' + tocCode);\r\n    this.userManagementService.getUserRoles(tocCode, this.selectedAppId).subscribe\r\n      (\r\n        (data: any) => {\r\n          this.roles = [];\r\n          this.showHideRoles = false;\r\n          if (data != null) {\r\n            var roleObjects = <object[]>data;\r\n            if (roleObjects.length > 0) {\r\n              this.showHideRoles = true;\r\n              this.roles = <Role[]>roleObjects;\r\n              this.roles.sort((a, b) => a.description.localeCompare(b.description));\r\n              // Push all the roles of edit record into controls by matching Role Id.\r\n              if (this.edit) {\r\n                this.setRolesForEditUser();\r\n              }\r\n            }\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.logger.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Set roles for the edit user details in control.\r\n   */\r\n  setRolesForEditUser() {\r\n    if (this.roles.length > 0) {\r\n      const mobileRoles = <FormArray>this.newUserForm.get('roles') as FormArray;\r\n      let rolesObject: number[] = this.populateUserDetail.roles;\r\n      for (let j = 0; j < rolesObject.length; j++) {\r\n        for (let i = 0; i < this.roles.length; i++) {\r\n          if (this.roles[i].id == rolesObject[j]) {\r\n            this.roles[i].isChecked = true;\r\n            mobileRoles.push(new FormControl(this.roles[i].id));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change event method to capture the roles selected during user creation.\r\n   * @param event  Handle selection and di-selection of roles.\r\n   */\r\n  changeSelectedRole(event) {\r\n    this.formEdited = true;\r\n    const mobileRoles = <FormArray>this.newUserForm.get('roles') as FormArray;\r\n    if (event.checked) {\r\n      mobileRoles.push(new FormControl(event.source.value));\r\n      if (this.edit) {\r\n        this.populateUserDetail.roles.push(event.source.value);\r\n      }\r\n    } else {\r\n      const i = mobileRoles.controls.findIndex(x => x.value === event.source.value);\r\n      mobileRoles.removeAt(i);\r\n      if (this.edit) {\r\n        const index: number = this.populateUserDetail.roles.indexOf(event.source.value);\r\n        if (index !== -1) {\r\n          this.populateUserDetail.roles.splice(index, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ToDo: Review it later and check how this can be handled from spec file\r\n   * Mark a role selected in Roles checkbox based on provided fixed value of TOC\r\n   * @param roleId - provided numeric role if\r\n   */\r\n  selectMatCheckBox(roleId: number) {\r\n    const mobileRoles = <FormArray>this.newUserForm.get('roles') as FormArray;\r\n    mobileRoles.push(new FormControl(roleId));\r\n  }\r\n\r\n  /**\r\n   * Reset form data\r\n   */\r\n  reset() {\r\n    this.roles = [];\r\n    this.populateUserDetail.roles = [];\r\n    const mobileRoles = <FormArray>this.newUserForm.get('roles') as FormArray;\r\n    let selectedRoles: number[] = [];\r\n    if (mobileRoles != null && mobileRoles.length != 0) {\r\n      selectedRoles = mobileRoles.value.toString().split(',');\r\n      for (let i = 0; i < selectedRoles.length; i++) {\r\n        const j = mobileRoles.controls.findIndex(x => x.value == selectedRoles[i]);\r\n        mobileRoles.removeAt(j);\r\n        const index: number = this.populateUserDetail.roles.indexOf(selectedRoles[i]);\r\n        if (index !== -1) {\r\n          this.populateUserDetail.roles.splice(index, 1);\r\n        }\r\n      }\r\n    }\r\n    this.patchValuesToFormFields();\r\n    this.formEdited = false;\r\n  }\r\n\r\n  /**\r\n   * Save method enabled when all required fields are added correctly.\r\n   * Shows the success toastr.\r\n   * Reset the form fields conditionally in case of Add user.\r\n   * Navigate to landing page in case of success for edit user.\r\n   */\r\n  save() {\r\n    var firstName;\r\n    var lastName;\r\n    var eMail;\r\n    var empId;\r\n    Object.keys(this.newUserForm.controls).forEach((key: string) => {\r\n      const abstractControl = this.newUserForm.get(key);\r\n      if (abstractControl instanceof FormGroup) {\r\n      } else if ((key) == 'employeeId') {\r\n        empId = abstractControl.value;\r\n        this.newUserForm.get('operatorId').setValue(abstractControl.value);\r\n      } else if ((key) == 'firstName') {\r\n        firstName = abstractControl.value;\r\n      } else if ((key) == 'lastName') {\r\n        lastName = abstractControl.value;\r\n      } else if ((key) == 'emailAddress') {\r\n        eMail = abstractControl.value;\r\n      } else {\r\n        this.logger.info(\"Save button clicked\" + abstractControl.value);\r\n      }\r\n    });\r\n    // This will capture the service response based on the edit user service inputs.\r\n    if (this.edit == true) {\r\n      var updatedUser = new UserDetails;\r\n      updatedUser = this.populateUserDetail;\r\n      updatedUser.firstName = firstName;\r\n      updatedUser.lastName = lastName;\r\n      updatedUser.emailAddress = eMail;\r\n      updatedUser.storeId = Constants.STORE_ID;\r\n      // Set emailaddress to null incase of blank\r\n      if (updatedUser.emailAddress == '') {\r\n        updatedUser.emailAddress = null;\r\n      }\r\n      this.saveButtonClicked = true;\r\n      if (this.userDetail.forcePwdChange != this.passwordChange.isForcedPwdChangeRequired) {\r\n        // Call to updateForcePasswordChangeFlag method to \r\n        // update isForcedPwdChangeRequired field for user into DB through API call\r\n        this.updateForcePasswordChangeFlag(empId, updatedUser);\r\n      } else {\r\n        if (this.setUserActiveInactive) {\r\n          // Call updateUserStatus method to update status of user in DB through API\r\n          this.updateUserStatus(empId, updatedUser);\r\n        } else {\r\n          // Call updateUserDetails method to update user details in DB though API\r\n          this.updateUserDetails(updatedUser);\r\n        }\r\n      }\r\n    } else {\r\n      // Call updateUserDetails method to update user details in DB though API\r\n      this.addUserDeatils();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to update user status through API call.\r\n   * @param tocAfterReset - TOC code from which Star Hub user belongs \r\n   * @param empId - User Id of user being updated \r\n   * @param updatedUser - object carrying details for updating user\r\n   */\r\n  updateUserStatus(empId: string, updatedUser: UserDetails) {\r\n    this.logger.info('Json send to service for updating user status field for user:');\r\n    this.userStatus = new UserStatus();\r\n    if (this.setUserActiveInactive) {\r\n      if (!this.showHideTerminationDate) {\r\n        this.userStatus.activeStateChangeAction = Constants.USER_TERMINATE;\r\n      } else {\r\n        this.userStatus.activeStateChangeAction = Constants.USER_REACTIVATE;\r\n      }\r\n    }\r\n    this.userManagementService.postChangeUserStatus(this.starHubUserToc, empId, this.userStatus).subscribe\r\n      (\r\n        (data: any) => {\r\n          // after success response from save force passwordchange field api call update user info method\r\n          if (this.checkModifiedFields()) {\r\n            this.updateUserDetails(updatedUser);\r\n          } else {\r\n            this.toastr.successToastr(Constants.USER_UPDATED_SUCCESS_SECONDARY,\r\n              Constants.USER_UPDATED_SUCCESS_PRIMARY);\r\n            this.logger.info('Logging success updated user status by calling API ' +\r\n              Constants.USER_UPDATED_SUCCESS_SECONDARY, Constants.USER_UPDATED_SUCCESS_PRIMARY);\r\n            this.logger.info(data);\r\n            this.router.navigate(['userlist']);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.saveButtonClicked = false;\r\n          this.errorMessagelogging = error;\r\n          if (this.errorMessagelogging.errorMessage.includes('$')) {\r\n            this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split('$')[1],\r\n              this.errorMessagelogging.errorMessage.split('$')[0]);\r\n            this.logger.error('Logging error on post service call for userStatus -' +\r\n              this.errorMessagelogging.errorMessage.split('$')[1],\r\n              this.errorMessagelogging.errorMessage.split('$')[0]);\r\n          } else {\r\n            this.toastr.errorToastr(this.errorMessagelogging.errorMessage);\r\n            this.logger.error(this.errorMessagelogging.errorObject);\r\n          }\r\n          this.logger.error(this.userStatus);\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Method to update forcepasswordchange flag for user through API call.\r\n   * @param tocAfterReset - TOC code from which Star Hub user belongs \r\n   * @param empId - User Id of user being updated \r\n   * @param updatedUser - object carrying details for updating user\r\n   */\r\n  updateForcePasswordChangeFlag(empId: string, updatedUser: UserDetails) {\r\n    this.logger.info('Json send to service for updating forcepasswordchange field for user:');\r\n    this.userManagementService.postForcePasswordChange(this.starHubUserToc, empId, this.passwordChange).subscribe\r\n      (\r\n        (data: any) => {\r\n          // after success response from save force passwordchange field api call update user info method\r\n          if (this.checkModifiedFields()) {\r\n            this.updateUserDetails(updatedUser);\r\n          } else {\r\n            this.toastr.successToastr(Constants.USER_UPDATED_SUCCESS_SECONDARY,\r\n              Constants.USER_UPDATED_SUCCESS_PRIMARY);\r\n            this.logger.info('Logging success updated forcepasswordchange by calling API ' +\r\n              Constants.USER_UPDATED_SUCCESS_SECONDARY, Constants.USER_UPDATED_SUCCESS_PRIMARY);\r\n            this.logger.info(data);\r\n            this.router.navigate(['userlist']);\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.saveButtonClicked = false;\r\n          this.errorMessagelogging = error;\r\n          if (this.errorMessagelogging.errorMessage.includes('$')) {\r\n            this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split('$')[1],\r\n              this.errorMessagelogging.errorMessage.split('$')[0]);\r\n            this.logger.error('Logging error on post service call for forcepasswrodreset -' +\r\n              this.errorMessagelogging.errorMessage.split('$')[1],\r\n              this.errorMessagelogging.errorMessage.split('$')[0]);\r\n          } else {\r\n            this.toastr.errorToastr(this.errorMessagelogging.errorMessage);\r\n            this.logger.error(this.errorMessagelogging.errorObject);\r\n          }\r\n          this.logger.error(this.passwordChange);\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Method to check if either of FirsrtName, LastName, Roles, E-Mail Address is modified\r\n   * @return True/False based on checked criteria of modified fields.\r\n   */\r\n  checkModifiedFields(): boolean {\r\n    let returnObject = false;\r\n    if (this.populateUserDetail.firstName != this.userDetail.firstName) {\r\n      returnObject = true;\r\n    }\r\n    if (this.populateUserDetail.lastName != this.userDetail.lastName) {\r\n      returnObject = true;\r\n    }\r\n    if (this.populateUserDetail.emailAddress != this.userDetail.emailAddress) {\r\n      returnObject = true;\r\n    }\r\n    if (JSON.stringify(this.populateUserDetail.roles) != JSON.stringify(this.userRoles)) {\r\n      returnObject = true;\r\n    }\r\n    return returnObject;\r\n  }\r\n\r\n  /**\r\n   * update method enabled when all required fields are added correctly.\r\n   * Shows the success toastr.\r\n   * Navigate to landing page in case of success for edit user.\r\n   * @param updatedUser object carrying details for updating user\r\n   */\r\n  updateUserDetails(updatedUser: UserDetails) {\r\n    this.logger.info('Json send to service for updating user details for user:');\r\n    this.userManagementService.postUpdateUserDetails(updatedUser).subscribe\r\n      (\r\n        (data: any) => {\r\n          this.saveButtonClicked = false;\r\n          if (data instanceof Object) {\r\n            this.updatedUserResponse = data;\r\n            this.toastr.successToastr(Constants.USER_UPDATED_SUCCESS_SECONDARY,\r\n              Constants.USER_UPDATED_SUCCESS_PRIMARY);\r\n            this.logger.info('Logging success update Put API call - ' +\r\n              Constants.USER_UPDATED_SUCCESS_SECONDARY, Constants.USER_UPDATED_SUCCESS_PRIMARY);\r\n            this.logger.info(data);\r\n            this.router.navigate(['userlist']);\r\n          } else {\r\n            this.postApiCallTestResponse = data;\r\n            if (this.postApiCallTestResponse != null) {\r\n              var splits = this.postApiCallTestResponse.split('$');\r\n              if (splits[0].toString().includes(Constants.HTTP_STATUS_BADREQUEST.toString()) ||\r\n                (splits[0].includes(Constants.HTTP_STATUS_UNAUTHORIZED_ACCESS.toString())) ||\r\n                (splits[0].includes(Constants.HTTP_STATUS_FORBIDDEN.toString())) ||\r\n                (splits[0].includes(Constants.HTTP_STATUS_PAGE_NOT_FOUND.toString())) ||\r\n                (splits[0].includes(Constants.HTTP_STATUS_NOT_ALLOWED.toString()))) {\r\n                this.toastr.errorToastr(splits[1], splits[0]);\r\n                this.logger.error('Logging error on update Put service call Test -' + splits[1], splits[0]);\r\n                this.logger.info(data);\r\n              } else {\r\n                this.toastr.successToastr(splits[1], splits[0]);\r\n                this.logger.info('Logging success update Put API call Test - ' + splits[1], splits[0]);\r\n                this.logger.info(data);\r\n                this.router.navigate(['userlist']);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.saveButtonClicked = false;\r\n          this.errorMessagelogging = error;\r\n          if (this.errorMessagelogging.errorMessage.includes('$')) {\r\n            this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split('$')[1],\r\n              this.errorMessagelogging.errorMessage.split('$')[0]);\r\n            this.logger.error('Logging error on update Put service call -' +\r\n              this.errorMessagelogging.errorMessage.split('$')[1],\r\n              this.errorMessagelogging.errorMessage.split('$')[0]);\r\n          } else {\r\n            this.toastr.errorToastr(this.errorMessagelogging.errorMessage);\r\n            this.logger.error(this.errorMessagelogging.errorObject);\r\n          }\r\n          this.logger.error(updatedUser);\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * add method enabled when all required fields are added correctly.\r\n   * Shows the success toastr.\r\n   * @param toc - TOC code from which Star Hub user belongs\r\n   */\r\n  addUserDeatils() {\r\n    // This will capture the service response based on the add user service inputs.\r\n    var enteredUser = new NewUser();\r\n    enteredUser = this.newUserForm.value;\r\n    if (enteredUser.emailAddress == '') {\r\n      enteredUser.emailAddress = null;\r\n    }\r\n    this.logger.info('Jason send to service for saving New TIS user:' + enteredUser);\r\n    this.saveButtonClicked = true;\r\n    this.userManagementService.postUserDetails(enteredUser).subscribe\r\n      (\r\n        (data: any) => {\r\n          this.saveButtonClicked = false;\r\n          if (data instanceof Object) {\r\n            this.roles = [];\r\n            this.fetchTocRoles(this.starHubUserToc);\r\n            this.createdUserResponse = data;\r\n            this.toastr.successToastr(Constants.USER_SAVE_SUCCESS_SECONDARY,\r\n              Constants.USER_SAVE_SUCCESS_PRIMARY);\r\n            this.logger.info('Logging success post API call - ' +\r\n              Constants.USER_SAVE_SUCCESS_SECONDARY,\r\n              Constants.USER_SAVE_SUCCESS_PRIMARY);\r\n            this.logger.info(data);\r\n            this.newUserForm.reset();\r\n            this.ngOnInit();\r\n          } else {\r\n            this.postApiCallTestResponse = data;\r\n            if (this.postApiCallTestResponse != null) {\r\n              var splits = this.postApiCallTestResponse.split('$');\r\n              if (splits[0].toString().includes(Constants.HTTP_STATUS_BADREQUEST.toString()) ||\r\n                (splits[0].includes(Constants.HTTP_STATUS_UNAUTHORIZED_ACCESS.toString())) ||\r\n                (splits[0].includes(Constants.HTTP_STATUS_FORBIDDEN.toString())) ||\r\n                (splits[0].includes(Constants.HTTP_STATUS_NOT_ALLOWED.toString()))) {\r\n                this.toastr.errorToastr(splits[1], splits[0]);\r\n                this.logger.error('Logging error on post service call Test -' + splits[1], splits[0]);\r\n                this.logger.info(data);\r\n              } else if (splits[0].includes(Constants.HTTP_STATUS_CONFLICT.toString())) {\r\n                this.toastr.warningToastr(splits[1], splits[0]);\r\n                this.logger.error('Logging error on post service call Test -' + splits[1], splits[0]);\r\n                this.logger.info(data);\r\n              } else {\r\n                this.roles = [];\r\n                this.fetchTocRoles(this.starHubUserToc);\r\n                this.toastr.successToastr(splits[1], splits[0]);\r\n                this.logger.info('Logging success post API call Test - ' + splits[1], splits[0]);\r\n                this.logger.info(data);\r\n                this.newUserForm.reset();\r\n                this.ngOnInit();\r\n              }\r\n            }\r\n          }\r\n        },\r\n        (error: any) => {\r\n          this.saveButtonClicked = false;\r\n          this.errorMessagelogging = error;\r\n          if (this.errorMessagelogging.errorMessage.includes('$')) {\r\n            if (this.errorMessagelogging.errorMessage.split('$')[0].includes(\r\n              Constants.HTTP_STATUS_CONFLICT.toString())) {\r\n              this.toastr.warningToastr(this.errorMessagelogging.errorMessage.split('$')[1],\r\n                this.errorMessagelogging.errorMessage.split('$')[0]);\r\n              this.logger.error('Logging error on post service call -' +\r\n                this.errorMessagelogging.errorMessage.split('$')[1],\r\n                this.errorMessagelogging.errorMessage.split('$')[0]);\r\n            } else {\r\n              this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split('$')[1],\r\n                this.errorMessagelogging.errorMessage.split('$')[0]);\r\n              this.logger.error('Logging error on post service call -' +\r\n                this.errorMessagelogging.errorMessage.split('$')[1],\r\n                this.errorMessagelogging.errorMessage.split('$')[0]);\r\n            }\r\n          } else {\r\n            this.toastr.errorToastr(this.errorMessagelogging.errorMessage);\r\n            this.logger.error(this.errorMessagelogging.errorObject);\r\n          }\r\n          this.logger.error(enteredUser);\r\n        }\r\n      );\r\n    this.newUserForm.markAsPristine();\r\n    this.newUserForm.markAsUntouched();\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NewtisuserRoutingModule } from './newtisuser-routing.module';\r\nimport { NewtisuserComponent } from './newtisuser.component';\r\nimport { LoggerModule } from 'ngx-logger';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MaterialModule } from 'src/app/shared/material.module';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    // AppRoutingModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NewtisuserRoutingModule,\r\n    TranslateModule.forRoot(\r\n      {\r\n        loader: {\r\n          provide: TranslateLoader,\r\n          useFactory: HttpLoaderFactory,\r\n          deps: [HttpClient]\r\n        }\r\n      }),\r\n    LoggerModule.forRoot(environment.logging)\r\n  ],\r\n  declarations: [NewtisuserComponent]\r\n})\r\nexport class NewtisuserModule { }\r\n\r\n","/**\r\n *  Represents the model structure to handle force password change in UI.\r\n */\r\nexport class PasswordChange {\r\n    isForcedPwdChangeRequired: boolean;\r\n  }","/**\r\n *  Represents the model structure for Edit User returned from API.\r\n */\r\nexport class UserDetails {\r\n    employeeId: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    toc: string;\r\n    terminationDate: Date;\r\n    status: string;\r\n    emailAddress: string;\r\n    roles: number[];\r\n    customerId: string;\r\n    manualPriceAuthorisation: number;\r\n    operatorId: string;\r\n    languageCode: number;\r\n    defaultTillId: string;\r\n    displayName: string;\r\n    userType: number;\r\n    birthDate: Date;\r\n    handCode: number;\r\n    shiftNlc: string;\r\n    shiftTpv: string;\r\n    storeId: number;\r\n    password: string;\r\n    forcePwdChange: boolean;\r\n}","/**\r\n *  Represents the model structure to handle user status change in UI.\r\n */\r\nexport class UserStatus {\r\n    activeStateChangeAction: string;\r\n}","/**\r\n *  Represents the model structure for NewUser returned from API.\r\n */\r\nexport class NewUser {\r\n    employeeId: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    emailAddress: string;\r\n    languageCode: string;\r\n    toc: string;\r\n    password: number;\r\n    userType: string;\r\n    operatorId: string;\r\n    storeId: string;\r\n    roles: number[];\r\n    manualPriceAuthorisation: string;\r\n}","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { UserDetails } from '../model/UserDetails';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { UserManagementService } from './user-management.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Role } from '../model/Role';\r\nimport { Toc } from '../model/Toc';\r\n\r\n/**\r\n * Resolver service to load TOCs data edit page before navigating to edit page from landing page\r\n */\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TocsResolverService implements Resolve<Toc[]>\r\n{\r\n    /**\r\n     * Constructor for fetch tocs resolver service.\r\n     * @param _userManagementService  Instance of UserManagementService to call service methods.\r\n     */\r\n    constructor(private _userManagementService: UserManagementService) {}\r\n\r\n    /**\r\n     * resolve method implementation to fetch tocs.\r\n     * @param route Instance of ActivatedRouteSnapshot to handle params supplied in routing.\r\n     * @param state Instance of RouterStateSnapshot to indicate current application state.\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Toc[]> {\r\n        return this._userManagementService.getTocs();\r\n    }\r\n}"],"sourceRoot":"webpack:///"}