{"version":3,"sources":["src/app/app.component.html","src/app/shared/confirm-dialog/confirm-dialog.component.html","node_modules/tslib/tslib.es6.js","src/$_lazy_route_resource lazy namespace object","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/shared/confirm-dialog/confirm-dialog.component.css","src/app/shared/confirm-dialog/confirm-dialog.component.ts","src/app/shared/material.module.ts","src/app/shared/model/ErrorLogging.ts","src/app/shared/service/api-interceptor.service.ts","src/app/shared/service/landing-page-resolver.service.ts","src/app/shared/service/user-details-resolver.service.ts","src/app/shared/service/user-management.service.ts","src/app/shared/utils/constants.ts","src/app/shared/utils/errorconstants.ts","src/environments/environment.ts","src/main.ts","fs (ignored)"],"names":[],"mappings":"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","sourcesContent":["export default \"\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet>    \\r\\n  </router-outlet>\\r\\n</div>\"","export default \"<h1 mat-dialog-title>\\r\\n  do you want to continue \\r\\n</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p>You have not saved your changes, do you want to lose them?</p>\\r\\n</div>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button  (click)=\\\"onDismiss()\\\">No</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onConfirm()\\\">Yes</button>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport {  NewtisuserComponent } from './managetisuser/newtisuser/newtisuser.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : 'newtisuser',\r\n    loadChildren: () => import('./managetisuser/newtisuser/newtisuser.module').then(m => m.NewtisuserModule)\r\n  },\r\n  {\r\n    path : 'newtisuser/edit/:toc/:id',\r\n    loadChildren: () => import('./managetisuser/newtisuser/newtisuser.module').then(m => m.NewtisuserModule)\r\n  },\r\n  {\r\n    path : 'userlist',\r\n    loadChildren: () => import('./managetisuser/userlist/userlist.module').then(m => m.userListModule)\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'userlist',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes), HttpClientModule],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"/* @import \\\"~@angular/material/prebuilt-themes/indigo-pink.css\\\"; */\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0VBQWtFIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAaW1wb3J0IFwifkBhbmd1bGFyL21hdGVyaWFsL3ByZWJ1aWx0LXRoZW1lcy9pbmRpZ28tcGluay5jc3NcIjsgKi9cclxuXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { browser } from 'protractor';\r\nimport { environment } from 'src/environments/environment.feature';\r\nimport { Auth } from 'aws-amplify';\r\nimport { Constants } from './shared/utils/constants';\r\n\r\n/**\r\n * Root Component for User maintenance UI.\r\n */\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  \r\n  /** To specify default language in which the form will appear. */\r\n  private _defaultLang: string;\r\n\r\n  /**\r\n   * Accessor for the defaultLang property\r\n   * @return Current value of the language property.\r\n   */\r\n  public get defaultLang(): string {\r\n    return this._defaultLang;\r\n  }\r\n\r\n  /**\r\n   * Mutator for the defaultLang property\r\n   * @param language New value of the language property.\r\n   */\r\n  public set defaultLang(value: string) {\r\n    this._defaultLang = value;\r\n  }\r\n\r\n  /** Supported application languages. */\r\n  lang: string[] = Constants.SUPPORTED_LANGUAGES;\r\n\r\n  /**\r\n   * Method to check current authenticated user.\r\n   */\r\n  // async userLoggedIn() {\r\n  //   return await Auth.currentAuthenticatedUser()\r\n  //     .then(() => true)\r\n  //     .catch(() => false);\r\n  // } \r\n\r\n \r\n  /**\r\n   * Loads immediately when the application is loaded and checks for current authenticated user.\r\n   */\r\n  ngOnInit() {\r\n    // this.userLoggedIn().then(userLoggedIn => {\r\n    //   if (!userLoggedIn) {\r\n    //     const redirectUrlParams = window.location.href;\r\n    //     window.location.href = environment.auth_ui_url + '?redirect=' + redirectUrlParams;\r\n    //   }\r\n    // }); \r\n  }\r\n\r\n  /**\r\n   * Constructor with injected service.\r\n   * @param TranslateService Service that translates messages to other languages.\r\n   */\r\n  constructor(public translate: TranslateService) {\r\n    this.defaultLang = Constants.DEFAULT_LANGUAGE;\r\n    translate.addLangs(this.lang)\r\n    translate.setDefaultLang(this.defaultLang);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from 'src/app/shared/material.module';\r\nimport { LoggerModule } from 'ngx-logger';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NewtisuserComponent } from './managetisuser/newtisuser/newtisuser.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ng6-toastr-notifications';\r\nimport { UserManagementService } from './shared/service/user-management.service';\r\nimport { APIInterceptorService, DEFAULT_TIMEOUT } from './shared/service/api-interceptor.service';\r\nimport { UserDetailsResolverService } from 'src/app/shared/service/user-details-resolver.service';\r\nimport { LandingPageResolverService } from './shared/service/landing-page-resolver.service';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  entryComponents: [ConfirmDialogComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule.forRoot(\r\n      {\r\n        loader: {\r\n          provide: TranslateLoader,\r\n          useFactory: HttpLoaderFactory,\r\n          deps: [HttpClient]\r\n        }\r\n      }),\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    LoggerModule.forRoot(environment.logging),\r\n  ],\r\n  providers: [UserManagementService, UserDetailsResolverService, LandingPageResolverService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: APIInterceptorService,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: DEFAULT_TIMEOUT,\r\n      useValue: 20000\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}","export default \".button-style-no{\\r\\n    background-color: #263238;\\r\\n    color: white;\\r\\n    width: 80px;\\r\\n    font-size: medium;\\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\n.button-style-yes{\\r\\n    background-color: #263238;\\r\\n    color: white;\\r\\n    width: 80px;\\r\\n    margin-left: 20px;\\r\\n    font-size: medium;\\r\\n    height: 30px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbmZpcm0tZGlhbG9nL2NvbmZpcm0tZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osV0FBVztJQUNYLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb25maXJtLWRpYWxvZy9jb25maXJtLWRpYWxvZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1dHRvbi1zdHlsZS1ub3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNjMyMzg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB3aWR0aDogODBweDtcclxuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG59XHJcblxyXG4uYnV0dG9uLXN0eWxlLXllc3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNjMyMzg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB3aWR0aDogODBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gICAgZm9udC1zaXplOiBtZWRpdW07XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbn0iXX0= */\"","import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Constants } from '../utils/constants';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\r\n  /** Supported application languages. */\r\n  lang: string[] = Constants.SUPPORTED_LANGUAGES;;\r\n\r\n  /** To specify default language in which the form will appear. */\r\n  private _defaultLang: string;\r\n\r\n  /**\r\n  * Accessor for the defaultLang property\r\n  * @return Current value of the language property.\r\n  */\r\n  public get defaultLang(): string {\r\n    return this._defaultLang;\r\n  }\r\n\r\n  /**\r\n   * Mutator for the defaultLang property\r\n   * @param language New value of the language property.\r\n   */\r\n  public set defaultLang(value: string) {\r\n    this._defaultLang = value;\r\n  }\r\n\r\n  /**\r\n   * Constructor with injected dialogRef and translate.\r\n   * @param dialogRef - MatDialog Referece.\r\n   * @param data - Confirmation dialog instance. \r\n   * @param translate - Multilingual support.\r\n   */\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n    public translate: TranslateService) {\r\n    this.defaultLang = Constants.DEFAULT_LANGUAGE;\r\n    translate.addLangs(this.lang);\r\n    translate.setDefaultLang(this.defaultLang);\r\n  }\r\n\r\n  /**\r\n   * Implement OnInit's `ngOnInit` method.\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Method to handle Yes button click event.\r\n   */\r\n  onConfirm(): void {\r\n    // Close the dialog, return true\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  /**\r\n   * Method to handle No button click event.\r\n   */\r\n  onDismiss(): void {\r\n    // Close the dialog, return false\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n\r\n/**\r\n * Class to represent confirm dialog model.\r\n * It has been kept here to keep it as part of shared component.\r\n */\r\nexport class ConfirmDialogModel {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatDividerModule,\r\n  MatSelectModule,\r\n  MatRadioModule,\r\n  MatIconModule,\r\n  MatDialogModule,\r\n  MatProgressSpinnerModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatPaginatorModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n     MatButtonModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatCheckboxModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatDividerModule,\r\n        MatSelectModule,\r\n        MatRadioModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatProgressSpinnerModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatCardModule,\r\n        MatFormFieldModule,\r\n        MatPaginatorModule,\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatDividerModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    MatSortModule,\r\n    MatCheckboxModule, \r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatPaginatorModule,\r\n  ],\r\n  declarations: [ConfirmDialogComponent]\r\n})\r\nexport class MaterialModule { }\r\n","/**\r\n *  Represents the model structure for handling errors thrown by API at client side and showing meanigful message to user.\r\n */\r\nexport class ErrorLogging\r\n{\r\n    errorMessage : string;\r\n    errorObject : any;\r\n}","import { Injectable, Injector, InjectionToken, Inject } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry, timeout } from 'rxjs/operators';\r\nimport { Constants } from '../utils/constants';\r\nimport { ErrorConstants } from '../utils/errorconstants';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { ApiValidationError } from '../model/ApiValidationError';\r\nimport { ApiError } from '../model/ApiError';\r\nimport { SystemError } from '../model/SystemError';\r\nimport { NGXLogger } from 'ngx-logger';\r\nimport { EEXIST } from 'constants';\r\nimport { ErrorLogging } from '../model/ErrorLogging';\r\n\r\nexport const DEFAULT_TIMEOUT = new InjectionToken<number>('defaultTimeout');\r\n\r\n/**\r\n * Implements HTTP_INTERCEPTOR in order to handle error\r\n * while making any http request to any REST API service.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class APIInterceptorService implements HttpInterceptor {\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const timeoutValue = Number(request.headers.get('timeout')) || this.defaultTimeout;\r\n\r\n    /** Generate UID to trace a single request thread. */\r\n    const UID = uuid();\r\n\r\n    /** Adding generated UID to request header to trace sigle request thread. */\r\n    const requestWithHeader = request.clone({\r\n      setHeaders: { CID: UID }\r\n    });\r\n\r\n    return next.handle(requestWithHeader).pipe(\r\n      timeout(timeoutValue),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param defaultTimeout Provide default timeout duration.\r\n   */\r\n  constructor(@Inject(DEFAULT_TIMEOUT) protected defaultTimeout: number) { }\r\n\r\n  /**\r\n   * Method to Handle error while making get request to Rest API.\r\n   * @param err Variable to hold httpErrorResponse.\r\n   */\r\n  private handleError(err: HttpErrorResponse) {\r\n    /** Send error captured to APM server using apmAgent */\r\n    let erroMessageLogging = new ErrorLogging();\r\n    let apiErrors: ApiError;\r\n    let sysErrors: SystemError;\r\n    if (!navigator.onLine) {\r\n      // Handle offline error\r\n      erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_NO_INTERNET_PRIMARY + '$' + ErrorConstants.MESSAGE_NO_INTERNET_SECONDARY;\r\n    }\r\n   else if (err.error instanceof ErrorEvent) {\r\n      // Client side or netwrok error occured.\r\n      erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_CLIENTSIDE_ERROR + err.error.message;\r\n    }\r\n    else {\r\n      if (err.status == Constants.HTTP_STATUS_BADREQUEST)\r\n      {\r\n        apiErrors = <ApiError> err.error;\r\n        erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_INVALID_VALUE_SUPPLIED_PRIMARY + '$' +\r\n        ErrorConstants.MESSAGE_INVALID_VALUE_SUPPLIED_SECONDARY;\r\n        erroMessageLogging.errorObject = apiErrors.debugMessage;\r\n      }\r\n      else if (err.status == Constants.HTTP_STATUS_CONFLICT) {\r\n        sysErrors = <SystemError> err.error;\r\n        erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_USER_ALREADY_EXISTS_PRIMARY + '$' +\r\n        ErrorConstants.MESSAGE_USER_ALREADY_EXISTS_SECONDARY;\r\n        erroMessageLogging.errorObject = sysErrors.message;\r\n      }\r\n      else\r\n       {\r\n        erroMessageLogging.errorObject = err.message;\r\n        switch (err.status) {\r\n          // Server side error based on status returned from API\r\n          case Constants.API_POST_ERROR_0: {\r\n            erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_SERVER_UNREACHABLE_PRIMARY + '$' +\r\n            ErrorConstants.MESSAGE_SERVER_UNREACHABLE_SECONDARY;\r\n            break;\r\n          }\r\n          case Constants.HTTP_STATUS_UNAUTHORIZED_ACCESS: {\r\n            erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_UNAUTHORIZED_ACCESS_PRIMARY + '$' +\r\n            ErrorConstants.MESSAGE_UNAUTHORIZED_ACCESS_SECONDARY;\r\n            break;\r\n          }\r\n          case Constants.HTTP_STATUS_FORBIDDEN: {\r\n            erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_FORBIDDEN_PRIMARY + '$' +\r\n            ErrorConstants.MESSAGE_FORBIDDEN_SECONDARY;\r\n            break;\r\n          }\r\n          case Constants.HTTP_STATUS_NOT_ALLOWED: {\r\n            erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_HTTPMETHOD_NOT_ALLOWED_PRIMARY + '$' +\r\n            ErrorConstants.MESSAGE_HTTPMETHOD_NOT_ALLOWED_SECONDARY;\r\n            break;\r\n          }\r\n          case Constants.HTTP_STATUS_PAGE_NOT_FOUND: {\r\n            erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_PAGE_NOT_FOUND_PRIMARY + '$' +\r\n             ErrorConstants.MESSAGE_PAGE_NOT_FOUND_SECONDARY;\r\n            break;\r\n          }\r\n          default: {\r\n            erroMessageLogging.errorMessage = ErrorConstants.MESSAGE_SERVER_ERROR + ':' + err.message;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return throwError(erroMessageLogging);\r\n  }\r\n}\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { UserDetails } from '../model/UserDetails';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { UserManagementService } from './user-management.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Auth } from 'aws-amplify';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n/**\r\n * Resolver service to load current user info to check for permissions before page loading. \r\n */\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LandingPageResolverService implements Resolve<UserDetails[]>\r\n{\r\n    /**\r\n     * Constructor of landing page resolver service.\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * Resolve method implementation for landing page resolver service.\r\n     * @param route Instance of ActivatedRouteSnapshot to handle params supplied in routing.\r\n     * @param state Instance of RouterStateSnapshot to indicate current application state.\r\n     * @returns Promise object which returns current user info details.\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\r\n        return Auth.currentUserInfo();\r\n    }\r\n}","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { UserDetails } from '../model/UserDetails';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { UserManagementService } from './user-management.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Resolver service to load user details on edit page before navigating to edit page from landing page\r\n */\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserDetailsResolverService implements Resolve<UserDetails[]>\r\n{\r\n    /**\r\n     * Constructor of user details resolver service.\r\n     * @param _userManagementService Instance of UserManagementService to call service methods.\r\n     */\r\n    constructor(private _userManagementService: UserManagementService) {\r\n    }\r\n\r\n   /**\r\n    * Resolve method implementation for user details resolver service.\r\n    * @param route Instance of ActivatedRouteSnapshot to handle params supplied in routing.\r\n    * @param state Instance of RouterStateSnapshot to indicate current application state.\r\n    */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<UserDetails[]> {\r\n        if (null != route.params.toc && null != route.params.id) {\r\n        return this._userManagementService.getUserDetails(route.params.toc, route.params.id);\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { of, Observable } from 'rxjs';\r\nimport { ErrorConstants } from '../utils/errorconstants';\r\nimport { NewUser } from '../model/tisuser';\r\nimport { Toc } from '../model/Toc';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { timeout } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { constants } from 'os';\r\nimport { Constants } from '../utils/constants';\r\nimport { Role } from '../model/Role';\r\nimport { UserDetails } from '../model/UserDetails';\r\nimport { PasswordChange } from '../model/PasswordChange';\r\nimport { strictEqual } from 'assert';\r\nimport { UserStatus } from '../model/UserStatus';\r\n\r\n\r\n/**\r\n * Provides service for accessing REST API service for getting arrivals details.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserManagementService {\r\n  /** URL for new user post call. */\r\n  private saveUserURL = environment.save_user_api_url;\r\n  /** URL for saving force password change value post call. */\r\n  private saveForcePasswordChangeURL = environment.save_force_password_change_api_url;\r\n  /** URL for saving changed status of user post call. */\r\n  private saveUserStatusURL = environment.save_user_status_api_url;\r\n  /** URL for update user post call. */\r\n  private updateUserURL = environment.update_user_api_url;\r\n  /** URL for get Toc list call. */\r\n  private getTocsListURL = environment.get_tocs_api_url;\r\n  /** URL for get Roles call. */\r\n  private getRolesURL = environment.get_roles_api_url;\r\n  /** URL for getting all the users for a said TOC. */\r\n  private getUsersURL = environment.get_users_api_url;\r\n  /** URL for geting a particular user details for edit. */\r\n  private getUserURL = environment.get_user_api_url;\r\n\r\n  /**\r\n   * Constructor to allow the injection of required services.\r\n   * @param http HttpClient instance for accessing the Rest API.\r\n   */\r\n  constructor(private http: HttpClient) { }\r\n  // Variable to return response for defined test criterias\r\n  respseReturn: string;\r\n  // Variable to hold test condition based on first name and last name\r\n  testConditions: string = '';\r\n\r\n  /**\r\n   * Method to post new user details to server using post Api.\r\n   * @param opost - NewUser object\r\n   */\r\n  postUserDetails(opost: NewUser): Observable<any> {\r\n    // Create test conditions if actual API is not in place\r\n    this.testConditions = opost.firstName + opost.lastName;\r\n    switch (this.testConditions) {\r\n      case 'FujitsuXXTestTestXXFujitsu201': {\r\n        this.respseReturn = Constants.USER_SAVE_SUCCESS_PRIMARY + '$' +\r\n          Constants.USER_SAVE_SUCCESS_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu400': {\r\n        this.respseReturn = ErrorConstants.MESSAGE_INVALID_VALUE_SUPPLIED_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_INVALID_VALUE_SUPPLIED_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu401': {\r\n        this.respseReturn = ErrorConstants.MESSAGE_UNAUTHORIZED_ACCESS_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_UNAUTHORIZED_ACCESS_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu403': {\r\n        this.respseReturn = ErrorConstants.MESSAGE_FORBIDDEN_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_FORBIDDEN_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu405': {\r\n        this.respseReturn = ErrorConstants.MESSAGE_HTTPMETHOD_NOT_ALLOWED_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_HTTPMETHOD_NOT_ALLOWED_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu409': {\r\n        this.respseReturn = ErrorConstants.MESSAGE_USER_ALREADY_EXISTS_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_USER_ALREADY_EXISTS_SECONDARY;\r\n        break;\r\n      }\r\n      default: {\r\n        // Actual API call to add new user\r\n        return this.http.post(this.saveUserURL, opost);\r\n        break;\r\n      }\r\n    }\r\n    return of(this.respseReturn);\r\n  }\r\n\r\n  /**\r\n   * Method to post force password change value for user to server using post Api.\r\n   * @param toc - TOC code\r\n   * @param userId - Employee ID\r\n   * @param opost - PasswordChange object\r\n   */\r\n  postForcePasswordChange(toc: string, userId: string, opost: PasswordChange): Observable<any> {\r\n    return this.http.post(this.saveForcePasswordChangeURL + Constants.TOC + toc.toUpperCase() + Constants.USERS +\r\n      userId + Constants.FORCE_PWD_CHANGE, opost);\r\n  }\r\n\r\n  /**\r\n   * Method to post user status value for user to server using post Api.\r\n   * @param toc - TOC code\r\n   * @param userId - Employee Id\r\n   * @param opost - UserStatus object\r\n   */\r\n  postChangeUserStatus(toc: string, userId: string, opost: UserStatus): Observable<any> {\r\n    return this.http.post(this.saveUserStatusURL + Constants.TOC + toc.toUpperCase() + Constants.USERS +\r\n      userId + Constants.ACTIVE_STATUS, opost);\r\n  }\r\n\r\n  /**\r\n   * Method to post update user details to server using post Api.\r\n   * @param opost - UserDetails object\r\n   */\r\n  postUpdateUserDetails(opost: UserDetails): Observable<any> {\r\n    // Create test conditions if actual API is not in place\r\n    this.testConditions = opost.firstName + opost.lastName;\r\n    switch (this.testConditions) {\r\n      case 'FujitsuXXTestTestXXFujitsu201': {\r\n        this.respseReturn = Constants.USER_UPDATED_SUCCESS_PRIMARY + '$' +\r\n          Constants.USER_UPDATED_SUCCESS_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu400': {\r\n        this.respseReturn = ErrorConstants.MESSAGE_INVALID_VALUE_SUPPLIED_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_INVALID_VALUE_SUPPLIED_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu401': {\r\n        this.respseReturn = ErrorConstants.MESSAGE_UNAUTHORIZED_ACCESS_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_UNAUTHORIZED_ACCESS_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu403': {\r\n        this.respseReturn = ErrorConstants.MESSAGE_FORBIDDEN_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_FORBIDDEN_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu405': {\r\n        this.respseReturn = ErrorConstants.MESSAGE_HTTPMETHOD_NOT_ALLOWED_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_HTTPMETHOD_NOT_ALLOWED_SECONDARY;\r\n        break;\r\n      }\r\n      case 'FujitsuXXTestTestXXFujitsu404': {\r\n        this.respseReturn =\r\n          ErrorConstants.MESSAGE_PAGE_NOT_FOUND_PRIMARY + '$' +\r\n          ErrorConstants.MESSAGE_PAGE_NOT_FOUND_SECONDARY;\r\n        break;\r\n      }\r\n      default: {\r\n        // Actual API call to update user\r\n        return this.http.put<any>(this.updateUserURL, opost, {\r\n          params: new HttpParams().set('toc', opost.toc.toUpperCase()).set('userId', opost.employeeId)\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    return of(this.respseReturn);\r\n  }\r\n\r\n  /**\r\n   * Method to get list of Roles based on TOC code using get Api for roles.\r\n   * @param selectedToc - TOC code\r\n   * @param selectedAppId - Application Id\r\n   */\r\n  getUserRoles(selectedToc: string, selectedAppId: number): Observable<Role[]> {\r\n    if (selectedAppId != null) {\r\n      return this.http.get<Role[]>(this.getRolesURL, {\r\n        params: new HttpParams().set('toc', selectedToc.toUpperCase())\r\n          .set('appId', selectedAppId.toString())\r\n      });\r\n    }\r\n    else {\r\n      return this.http.get<Role[]>(this.getRolesURL, {\r\n        params: new HttpParams().set('toc', selectedToc.toUpperCase())\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to get list of all TOCs using get Api for TOCs.\r\n   */\r\n  getTocs(): Observable<Toc[]> {\r\n    return this.http.get<Toc[]>(this.getTocsListURL);\r\n  }\r\n\r\n /**\r\n  * Method to get list of all Users with their details using get Api for Users.\r\n  * @param getUsersToc - TOC Code\r\n  */\r\n  getUsersDetails(getUsersToc: string): Observable<UserDetails[]> {\r\n    return this.http.get<UserDetails[]>(this.getUsersURL, {\r\n      params: new HttpParams().set('toc', getUsersToc.toUpperCase())\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to get user detail based on Employee ID and TOC using get Api for User.\r\n   * @param getUsersToc - TOC Code\r\n   * @param getEmployeeID - Employee ID\r\n   */\r\n  getUserDetails(getUsersToc: string, getEmployeeID: string): Observable<UserDetails[]> {\r\n    return this.http.get<UserDetails[]>(this.getUserURL, {\r\n      params: new HttpParams().set('toc', getUsersToc.toUpperCase())\r\n        .set('userId', getEmployeeID.toString())\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Constants defined.\r\n */\r\nexport class Constants {\r\n    public static PARAMETERS_USERID = 'userid';\r\n    public static MANUAL_PRICE_AUTH_CODE = 0;\r\n    public static STAR_MOBILE_APP_CODE = 1;\r\n    public static EMP_ID_MIN_LENGTH = 1;\r\n    public static EMP_ID_MAX_LENGTH = 12;\r\n    public static LIVE_USER_CODE = 4;\r\n    public static STORE_ID = 94;\r\n    public static DEFAULT_ROLE_ID = 100;\r\n    public static GROUP_ID = 123;\r\n    public static DEFAULT_LANGUAGE_CODE = 9;\r\n    public static DEFAULT_PAGE_SIZE = 10;\r\n    public static PAGE_SIZE_OPTION = [10, 25, 50, 100];\r\n    public static USER_ACTIVE = 'Active';\r\n    public static USER_DELETED = 'Inactive';\r\n    public static FORCE_PWD_CHANGE = '/forcePwdChange';\r\n    public static USER_REACTIVATE = 'REACTIVATE';\r\n    public static USER_TERMINATE = 'TERMINATE';\r\n    public static ACTIVE_STATUS = '/activeStatus';\r\n    public static MAKE_ACTIVE = \"Make active\";  \r\n    public static MAKE_INACTIVE = \"Make inactive\";\r\n    public static TOC = '/toc/';\r\n    public static USERS = '/users/';\r\n    public static COLUMN_DETAILS_USERLIST_PAGE = ['actions', 'employeeId', 'firstName', 'lastName','status'];\r\n    public static COLUMN_DETAILS_USERLIST_PAGE_NO_EDITPERMISSION = ['employeeId', 'firstName', 'lastName','status'];\r\n    public static SUPPORTED_LANGUAGES = ['en', 'fr'];\r\n    public static DEFAULT_LANGUAGE = 'en';\r\n    public static SCREEN_SIZE_SMALL = 'sm';\r\n    public static SCREEN_SIZE_VERY_SMALL = 'xs';\r\n    public static COLUMN_DETAILS_USERLIST_SMALL_PAGE = ['actions', 'employeeId', 'firstName','lastName'];\r\n    public static COLUMN_DETAILS_USERLIST_SMALL_PAGE_NO_EDITPERMISSION = ['employeeId', 'firstName','lastName'];\r\n    public static API_POST_ERROR_0 = 0;\r\n    public static HTTP_STATUS_BADREQUEST = 400;\r\n    public static HTTP_STATUS_UNAUTHORIZED_ACCESS = 401;\r\n    public static HTTP_STATUS_FORBIDDEN = 403;\r\n    public static HTTP_STATUS_PAGE_NOT_FOUND = 404;\r\n    public static HTTP_STATUS_NOT_ALLOWED = 405;\r\n    public static HTTP_STATUS_CONFLICT = 409;\r\n    public static HTTP_STATUS_CREATED = '201';\r\n    public static API_STATUS_OK = '200';\r\n    public static DEFAULT_STAR_APP = 'STARmobile app';\r\n    public static DEFAULT_PASSWORD = '0000';\r\n    public static EDIT = 'edit';\r\n    public static USER_SAVE_SUCCESS_PRIMARY = 'User Added';\r\n    public static USER_SAVE_SUCCESS_SECONDARY = 'User details saved successfully';\r\n    public static USER_UPDATED_SUCCESS_PRIMARY = 'User updated';\r\n    public static USER_UPDATED_SUCCESS_SECONDARY = 'User details updated successfully';\r\n    public static USER_GET_SUCCESS_SECONDARY = 'Data fetched successfully';\r\n    public static USER_LIST_FORM = 'userlist';\r\n    public static USER_FORM = 'newtisuser';\r\n    public static ATTRIBUTES_FIELD = 'attributes';\r\n    public static LANDING_PAGE_RESOLVER_FIELD = 'landingPage';\r\n    public static CUSTOM_PERMISSIONS_FIELD = 'custom:permissions';\r\n    public static CUSTOM_TOC = 'custom:toc';\r\n    public static ADD_USER_PERMISSION_VALUE = '10-01';\r\n    public static EDIT_USER_PERMISSION_VALUE = '10-02';\r\n    public static DELETE_USER_PERMISSION_VALUE = '10-03';\r\n    public static SPLIT_COMMA_FOR_PERMISSIONS = ',';\r\n    public static SPLIT_COLON_FOR_PERMISSIONS = ':';\r\n    public static SPLIT_PIPE_FOR_PERMISSIONS = '|';\r\n    public static REMOVE_QUOTE_FROM_PERMISSIONS = '\"';\r\n    public static COLUMN_HEADER_FIRSTNAME = 'firstName';\r\n    public static COLUMN_HEADER_LASTNAME = 'lastName';\r\n    public static COLUMN_HEADER_EMPLOYEED_ID = 'employeeId';\r\n    public static COLUMN_HEADER_STATUS = 'status';\r\n    public static DESCENDING_ORDER = 'desc';\r\n    public static TITLE_EDIT_USERS = 'Edit TIS User';\r\n    public static TITLE_ADD_USERS = 'Add TIS User';\r\n}\r\n\r\n","/**\r\n * Error Constants defined.\r\n */\r\nexport class ErrorConstants {\r\n  public static INVALID_FORM = 'Form is invalid';\r\n  public static MESSAGE_NO_INTERNET_PRIMARY = 'No Internet Connection';\r\n  public static MESSAGE_NO_INTERNET_SECONDARY = 'Please check and try again';\r\n  public static MESSAGE_CLIENTSIDE_ERROR = 'Client side error occured: ';\r\n  public static MESSAGE_API_ERROR = 'Error: API Issue, please report this interface failure!';\r\n  public static MESSAGE_SERVER_UNREACHABLE_PRIMARY = 'Server Error';\r\n  public static MESSAGE_SERVER_UNREACHABLE_SECONDARY = 'Please report this failure';\r\n  public static MESSAGE_INVALID_VALUE_SUPPLIED_PRIMARY = 'Field contains an invalid value (400)';\r\n  public static MESSAGE_INVALID_VALUE_SUPPLIED_SECONDARY = 'Please correct data and try again';\r\n  public static MESSAGE_UNAUTHORIZED_ACCESS_PRIMARY = 'Unauthorised Access (401)';\r\n  public static MESSAGE_UNAUTHORIZED_ACCESS_SECONDARY = 'Please report this failure';\r\n  public static MESSAGE_FORBIDDEN_PRIMARY = 'Access Forbidden (403)';\r\n  public static MESSAGE_FORBIDDEN_SECONDARY = 'Please report this failure';\r\n  public static MESSAGE_PAGE_NOT_FOUND_PRIMARY = 'Page Not Found (404)';\r\n  public static MESSAGE_PAGE_NOT_FOUND_SECONDARY = 'Please report this failure';\r\n  public static MESSAGE_HTTPMETHOD_NOT_ALLOWED_PRIMARY = 'Unexpected error (405)';\r\n  public static MESSAGE_HTTPMETHOD_NOT_ALLOWED_SECONDARY = 'Please report this failure';\r\n  public static MESSAGE_USER_ALREADY_EXISTS_PRIMARY = 'User Not Added (409)';\r\n  public static MESSAGE_USER_ALREADY_EXISTS_SECONDARY = 'User already exists';\r\n  public static MESSAGE_SERVER_ERROR = 'Server Error: ';\r\n  public static MESSAGE_SAVENEWUSER_API_FAILED = 'Call to Save New User API failed.';\r\n  public static MESSAGE_USERID_CANNOT_EDITED = 'User Id is not found, Please report this failure';\r\n\r\n\r\n  account_validation_messages = {\r\n      'userId': [\r\n        { type: 'required', message: 'userId is required' },\r\n        { type: 'minlength', message: 'userId must be at least 4 characters long' },\r\n        { type: 'maxlength', message: 'userId cannot be more than 12 characters long' },\r\n        { type: 'pattern', message: 'Your userId must contain only numbers ' },\r\n        { type: 'validUsername', message: 'Your username has already been taken' }\r\n      ],\r\n      'email': [\r\n        { type: 'required', message: 'Email is required' },\r\n        { type: 'pattern', message: 'Enter a valid email' }\r\n      ],\r\n      'confirm_password': [\r\n        { type: 'required', message: 'Confirm password is required' },\r\n        { type: 'areEqual', message: 'Password mismatch' }\r\n      ],\r\n      'password': [\r\n        { type: 'required', message: 'Password is required' },\r\n        { type: 'minlength', message: 'Password must be at least 5 characters long' },\r\n        { type: 'pattern', message: 'Your password must contain at least one uppercase, one lowercase, and one number' }\r\n      ],\r\n      'lastName': [\r\n        { type: 'pattern', message: 'You must accept terms and conditions' }\r\n      ]\r\n      };\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\nimport { NgxLoggerLevel } from 'ngx-logger';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  auth_ui_url: 'https://auth-ui-master.dev.star-hub-services.net',\r\n  save_user_api_url: 'https://user-master.dev.star-hub-services.net/api/user',\r\n  update_user_api_url: 'https://user-master.dev.star-hub-services.net/api/user',\r\n  get_tocs_api_url: 'https://toc-master.dev.star-hub-services.net/api/toc',\r\n  get_roles_api_url: 'https://user-master.dev.star-hub-services.net/api/role',\r\n  get_users_api_url: 'https://user-master.dev.star-hub-services.net/api/user',\r\n  get_user_api_url: 'https://user-master.dev.star-hub-services.net/api/user',\r\n  save_force_password_change_api_url : 'https://user-master.dev.star-hub-services.net/api/userpwd',\r\n  save_user_status_api_url : 'https://user-master.dev.star-hub-services.net/api/user',\r\n  appver: '1.0.0',\r\n  cognito_user_pool_id: 'eu-west-2_6SkCk6Rb5',\r\n  cognito_region: 'eu-west-2',\r\n  cognito_user_pool_web_client_id: '25c5h4as44382qad5snq84tvgu',\r\n  log_level: 'DEBUG',\r\n  profile: 'dev',\r\n  logging: {\r\n    serverLoggingUrl: '/api/logs',\r\n    level: NgxLoggerLevel.ERROR,\r\n    serverLogLevel: NgxLoggerLevel.ERROR\r\n  }\r\n};\r\n\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport Amplify, { Auth } from 'aws-amplify';\r\n\r\nvar domain = '.' + environment.profile + '.star-hub-services.net';\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    region: environment.cognito_region,\r\n    userPoolId: environment.cognito_user_pool_id,\r\n    userPoolWebClientId: environment.cognito_user_pool_web_client_id,\r\n    cookieStorage: {\r\n      domain: domain,\r\n      secure: true\r\n    }\r\n  }\r\n});\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"sourceRoot":"webpack:///","file":"main-es5.1e1f1ce1010f3082aea5.js"}