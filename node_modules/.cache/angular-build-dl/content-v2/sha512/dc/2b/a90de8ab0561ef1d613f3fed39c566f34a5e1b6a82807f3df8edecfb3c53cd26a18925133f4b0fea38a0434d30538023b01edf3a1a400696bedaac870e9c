(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{gU5p:function(e,r,t){"use strict";t.r(r);var s=t("mrSG"),i=t("8Y7J"),n=t("SVse"),a=t("iInd"),o=t("P4hB"),l=t("9Vv1"),d=t("s7LF");class h{}var c=t("TSSN"),g=t("pxtl"),u=t("GqWp");class p{}class m{}class f{}class b{}class U{constructor(e){this.hasEditPermissions=!1,this.hasDeletePermissions=!1,this.hasAddPermissions=!1,this.findUserAttributes(e)}findUserAttributes(e){let r=new b;var t,s,i;let n;t=Object.keys(e);for(let a=0;a<t.length;a++)if(t[a]==l.a.ATTRIBUTES_FIELD){s=e[t[a]],i=Object.keys(s);for(let e=0;e<i.length;e++)if(i[e]==l.a.CUSTOM_TOC&&(r.customToc=s[i[e]],this.defaultToc=r.customToc),i[e]==l.a.CUSTOM_PERMISSIONS_FIELD){r.customPermissions=s[i[e]],n=r.customPermissions.split(l.a.SPLIT_PIPE_FOR_PERMISSIONS);for(let e=0;e<n.length;e++)n[e]==l.a.ADD_USER_PERMISSION_VALUE?this.hasAddPermissions=!0:n[e]==l.a.EDIT_USER_PERMISSION_VALUE?this.hasEditPermissions=!0:n[e]==l.a.DELETE_USER_PERMISSION_VALUE&&(this.hasDeletePermissions=!0)}}return r}}var S=t("s6ns"),w=t("ZokB"),E=t("/q54"),T=t("AL3R"),_=t("AytR");let v=class{constructor(e,r,t,s,i,n,a,o,d){this.route=e,this.logger=r,this.formBuilder=t,this.router=s,this.userManagementService=i,this.media=n,this.translate=a,this.toastr=o,this.dialog=d,this.showHideRoles=!1,this.saveButtonClicked=!1,this.userTypes=[{value:l.a.LIVE_USER_CODE,display:"Live User"}],this.languages=[{value:l.a.DEFAULT_LANGUAGE_CODE,display:"English UK"}],this.applicationNames=[{val:l.a.STAR_MOBILE_APP_CODE,disp:"STARMobile app"}],this.userDetails=[],this.tocs=[],this.roles=[],this.isForcedPwdChangeRequired=!1,this.setUserActiveInactive=!1,this.disableEnableForcedPwdChange=!1,this.disableEnableRoles=!1,this.showHideTerminationDate=!1,this.userRoles=[],this.lang=l.a.SUPPORTED_LANGUAGES,this.editUser=l.a.EDIT,this.edit=!1,this.formEdited=!1,this.windowSelectionCheck=!1,this.hasEditPermissions=!1,this.hasAddPermissions=!1,this.hasDeletePermissions=!1,this.starHubUserToc="",this.starHubUserTocName="",this.activeInactiveCaption="",this.cannotViewPage=!1,this.href="",this.title="",this.alertResult=!1,this.currentScreenWidth="",this.showToolbarButtons=!0,this.defaultLang=l.a.DEFAULT_LANGUAGE,a.addLangs(this.lang),a.setDefaultLang(this.defaultLang),this.passwordChange=new m,this.flexMediaWatcher=n.media$.subscribe(e=>{e.mqAlias!==this.currentScreenWidth&&(this.currentScreenWidth=e.mqAlias,this.setupTable())})}get defaultLang(){return this._defaultLang}set defaultLang(e){this._defaultLang=e}setupTable(){"xs"==this.currentScreenWidth||"sm"==this.currentScreenWidth?this.showToolbarButtons=!1:this.showToolbarButtons=!0}ngOnInit(){this.currentUserInfo=this.route.snapshot.data[l.a.LANDING_PAGE_RESOLVER_FIELD];let e=new U(this.currentUserInfo);this.hasAddPermissions=e.hasAddPermissions,this.hasEditPermissions=e.hasEditPermissions,this.hasDeletePermissions=e.hasDeletePermissions,this.starHubUserToc=e.defaultToc;this.route.snapshot.paramMap;this.createUserForm();const r=this.userTypes.find(e=>e.value==l.a.LIVE_USER_CODE);this.newUserForm.get("userType").setValue(r.value);const t=this.applicationNames.find(e=>e.val==l.a.STAR_MOBILE_APP_CODE);if(this.newUserForm.get("Applications").setValue(t.val),this.href=this.router.url,this.href.includes(l.a.EDIT)?(this.title=l.a.TITLE_EDIT_USERS,this.hasEditPermissions||(this.cannotViewPage=!0)):this.href.includes(l.a.USER_FORM)&&(this.title=l.a.TITLE_ADD_USERS,this.hasAddPermissions||(this.cannotViewPage=!0)),this.userDetails=this.route.snapshot.data.userDetail,this.userDetails&&this.userDetails.length>0?(this.userDetail=this.userDetails[0],this.edit=!0,this.patchValuesToFormFields()):this.href.includes(l.a.USER_FORM)?this.fetchTocRoles(this.starHubUserToc):this.router.navigate([l.a.USER_LIST_FORM]),this.tocs=this.route.snapshot.data.tocs,null!=this.tocs){let e=this.tocs.filter(e=>e.internalTocCode==this.starHubUserToc);if(null!=e&&e.length>0){let r=e[0];this.starHubUserTocName=r.toc}this.tocs.sort((e,r)=>e.toc.localeCompare(r.toc))}}logout(){if(T.a.signOut({global:!0}),null==T.a.currentUserInfo()){localStorage.clear();const e=window.location.href;window.location.href=_.a.auth_ui_url+"?redirect="+e}}createUserForm(){this.newUserForm=this.formBuilder.group({employeeId:["",d.l.compose([d.l.required,d.l.minLength(l.a.EMP_ID_MIN_LENGTH),d.l.pattern("^[a-zA-Z0-9']+")])],firstName:["",d.l.compose([d.l.required,d.l.pattern("^[a-zA-Z']+")])],lastName:["",d.l.compose([d.l.required,,d.l.pattern("^[a-zA-Z']+")])],emailAddress:["",[d.l.email]],Applications:["",d.l.required],languageCode:[l.a.DEFAULT_LANGUAGE_CODE,d.l.required],toc:[this.starHubUserToc,d.l.required],password:[l.a.DEFAULT_PASSWORD],userType:["",d.l.required],operatorId:[""],manualPriceAuthorisation:[l.a.MANUAL_PRICE_AUTH_CODE],storeId:[l.a.STORE_ID],roles:this.formBuilder.array(this.roles,d.l.required),forcePasswordChange:[]})}patchValuesToFormFields(){if(1==this.edit&&null!=this.userDetail){if(this.populateUserDetail=Object.assign({},this.userDetail),this.userRoles.length>0){this.userDetail.roles=[],this.populateUserDetail.roles=[];for(let e=0;e<this.userRoles.length;e++)this.userDetail.roles.push(this.userRoles[e]),this.populateUserDetail.roles.push(this.userRoles[e])}else for(let e=0;e<this.userDetail.roles.length;e++)this.userRoles.push(this.userDetail.roles[e]);this.fetchTocRoles(this.populateUserDetail.toc),this.userDetail.forcePwdChange?(this.isForcedPwdChangeRequired=!0,this.disableEnableForcedPwdChange=!0,this.passwordChange.isForcedPwdChangeRequired=!0):(this.isForcedPwdChangeRequired=!1,this.passwordChange.isForcedPwdChangeRequired=!1,this.disableEnableForcedPwdChange=!1),this.userDetail.terminationDate&&null!=this.userDetail.terminationDate?(this.showHideTerminationDate=!0,this.activeInactiveCaption=l.a.MAKE_ACTIVE,this.setUserActiveInactive=!1,this.disableEnableRoles=!0,this.disableEnableForcedPwdChange=!0,this.newUserForm.controls.firstName.disable(),this.newUserForm.controls.lastName.disable(),this.newUserForm.controls.emailAddress.disable(),this.newUserForm.controls.roles.disable(),this.newUserForm.controls.forcePasswordChange.disable()):(this.disableEnableRoles=!1,this.setUserActiveInactive=!1,this.showHideTerminationDate=!1,this.activeInactiveCaption=l.a.MAKE_INACTIVE),this.newUserForm.patchValue({employeeId:this.populateUserDetail.employeeId,toc:this.populateUserDetail.toc,firstName:this.populateUserDetail.firstName,lastName:this.populateUserDetail.lastName,role:this.populateUserDetail.roles,emailAddress:this.populateUserDetail.emailAddress}),this.newUserForm.controls.employeeId.disable()}}changeSelectedApplication(e){this.selectedAppId=e.value}changeForcePasswordChange(e){this.formEdited=!0,this.isForcedPwdChangeRequired=e.checked,this.passwordChange.isForcedPwdChangeRequired=e.checked,e.checked&&(this.setUserActiveInactive=!1)}changeUserStatus(e){!this.disableEnableForcedPwdChange&&this.isForcedPwdChangeRequired&&(this.isForcedPwdChangeRequired=!1,this.passwordChange.isForcedPwdChangeRequired=!1),this.formEdited=!0,this.setUserActiveInactive=e.checked}userDataModified(){this.edit&&(this.formEdited=!0)}homePageNav(){if(this.edit&&this.newUserForm.valid&&1==this.formEdited){const e=new w.b;this.dialog.open(w.a,{data:e}).afterClosed().subscribe(e=>{this.alertResult=e,this.alertResult&&this.router.navigate([l.a.USER_LIST_FORM])})}else this.router.navigate([l.a.USER_LIST_FORM])}fetchTocRoles(e){this.logger.info("TOC Code send to service for pulling out roles details :"+e),this.userManagementService.getUserRoles(e,this.selectedAppId).subscribe(e=>{if(this.roles=[],this.showHideRoles=!1,null!=e){var r=e;r.length>0&&(this.showHideRoles=!0,this.roles=r,this.roles.sort((e,r)=>e.description.localeCompare(r.description)),this.edit&&this.setRolesForEditUser())}},e=>{this.logger.error(e)})}setRolesForEditUser(){if(this.roles.length>0){const e=this.newUserForm.get("roles");let r=this.populateUserDetail.roles;for(let t=0;t<r.length;t++)for(let s=0;s<this.roles.length;s++)this.roles[s].id==r[t]&&(this.roles[s].isChecked=!0,e.push(new d.c(this.roles[s].id)))}}changeSelectedRole(e){this.formEdited=!0;const r=this.newUserForm.get("roles");if(e.checked)r.push(new d.c(e.source.value)),this.edit&&this.populateUserDetail.roles.push(e.source.value);else{const t=r.controls.findIndex(r=>r.value===e.source.value);if(r.removeAt(t),this.edit){const r=this.populateUserDetail.roles.indexOf(e.source.value);-1!==r&&this.populateUserDetail.roles.splice(r,1)}}}selectMatCheckBox(e){this.newUserForm.get("roles").push(new d.c(e))}reset(){this.roles=[],this.populateUserDetail.roles=[];const e=this.newUserForm.get("roles");let r=[];if(null!=e&&0!=e.length){r=e.value.toString().split(",");for(let t=0;t<r.length;t++){const s=e.controls.findIndex(e=>e.value==r[t]);e.removeAt(s);const i=this.populateUserDetail.roles.indexOf(r[t]);-1!==i&&this.populateUserDetail.roles.splice(i,1)}}this.patchValuesToFormFields(),this.formEdited=!1}save(){var e,r,t,s;if(Object.keys(this.newUserForm.controls).forEach(i=>{const n=this.newUserForm.get(i);n instanceof d.d||("employeeId"==i?(s=n.value,this.newUserForm.get("operatorId").setValue(n.value)):"firstName"==i?e=n.value:"lastName"==i?r=n.value:"emailAddress"==i?t=n.value:this.logger.info("Save button clicked"+n.value))}),1==this.edit){var i=new p;(i=this.populateUserDetail).firstName=e,i.lastName=r,i.emailAddress=t,i.storeId=l.a.STORE_ID,""==i.emailAddress&&(i.emailAddress=null),this.saveButtonClicked=!0,this.userDetail.forcePwdChange!=this.passwordChange.isForcedPwdChangeRequired?this.updateForcePasswordChangeFlag(s,i):this.setUserActiveInactive?this.updateUserStatus(s,i):this.updateUserDetails(i)}else this.addUserDeatils()}updateUserStatus(e,r){this.logger.info("Json send to service for updating user status field for user:"),this.userStatus=new f,this.setUserActiveInactive&&(this.showHideTerminationDate?this.userStatus.activeStateChangeAction=l.a.USER_REACTIVATE:this.userStatus.activeStateChangeAction=l.a.USER_TERMINATE),this.userManagementService.postChangeUserStatus(this.starHubUserToc,e,this.userStatus).subscribe(e=>{this.checkModifiedFields()?this.updateUserDetails(r):(this.toastr.successToastr(l.a.USER_UPDATED_SUCCESS_SECONDARY,l.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info("Logging success updated user status by calling API "+l.a.USER_UPDATED_SUCCESS_SECONDARY,l.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info(e),this.router.navigate(["userlist"]))},e=>{this.saveButtonClicked=!1,this.errorMessagelogging=e,this.errorMessagelogging.errorMessage.includes("$")?(this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0]),this.logger.error("Logging error on post service call for userStatus -"+this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage),this.logger.error(this.errorMessagelogging.errorObject)),this.logger.error(this.userStatus)})}updateForcePasswordChangeFlag(e,r){this.logger.info("Json send to service for updating forcepasswordchange field for user:"),this.userManagementService.postForcePasswordChange(this.starHubUserToc,e,this.passwordChange).subscribe(e=>{this.checkModifiedFields()?this.updateUserDetails(r):(this.toastr.successToastr(l.a.USER_UPDATED_SUCCESS_SECONDARY,l.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info("Logging success updated forcepasswordchange by calling API "+l.a.USER_UPDATED_SUCCESS_SECONDARY,l.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info(e),this.router.navigate(["userlist"]))},e=>{this.saveButtonClicked=!1,this.errorMessagelogging=e,this.errorMessagelogging.errorMessage.includes("$")?(this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0]),this.logger.error("Logging error on post service call for forcepasswrodreset -"+this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage),this.logger.error(this.errorMessagelogging.errorObject)),this.logger.error(this.passwordChange)})}checkModifiedFields(){let e=!1;return this.populateUserDetail.firstName!=this.userDetail.firstName&&(e=!0),this.populateUserDetail.lastName!=this.userDetail.lastName&&(e=!0),this.populateUserDetail.emailAddress!=this.userDetail.emailAddress&&(e=!0),JSON.stringify(this.populateUserDetail.roles)!=JSON.stringify(this.userRoles)&&(e=!0),e}updateUserDetails(e){this.logger.info("Json send to service for updating user details for user:"),this.userManagementService.postUpdateUserDetails(e).subscribe(e=>{if(this.saveButtonClicked=!1,e instanceof Object)this.updatedUserResponse=e,this.toastr.successToastr(l.a.USER_UPDATED_SUCCESS_SECONDARY,l.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info("Logging success update Put API call - "+l.a.USER_UPDATED_SUCCESS_SECONDARY,l.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info(e),this.router.navigate(["userlist"]);else if(this.postApiCallTestResponse=e,null!=this.postApiCallTestResponse){var r=this.postApiCallTestResponse.split("$");r[0].toString().includes(l.a.HTTP_STATUS_BADREQUEST.toString())||r[0].includes(l.a.HTTP_STATUS_UNAUTHORIZED_ACCESS.toString())||r[0].includes(l.a.HTTP_STATUS_FORBIDDEN.toString())||r[0].includes(l.a.HTTP_STATUS_PAGE_NOT_FOUND.toString())||r[0].includes(l.a.HTTP_STATUS_NOT_ALLOWED.toString())?(this.toastr.errorToastr(r[1],r[0]),this.logger.error("Logging error on update Put service call Test -"+r[1],r[0]),this.logger.info(e)):(this.toastr.successToastr(r[1],r[0]),this.logger.info("Logging success update Put API call Test - "+r[1],r[0]),this.logger.info(e),this.router.navigate(["userlist"]))}},r=>{this.saveButtonClicked=!1,this.errorMessagelogging=r,this.errorMessagelogging.errorMessage.includes("$")?(this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0]),this.logger.error("Logging error on update Put service call -"+this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage),this.logger.error(this.errorMessagelogging.errorObject)),this.logger.error(e)})}addUserDeatils(){var e=new h;""==(e=this.newUserForm.value).emailAddress&&(e.emailAddress=null),this.logger.info("Jason send to service for saving New TIS user:"+e),this.saveButtonClicked=!0,this.userManagementService.postUserDetails(e).subscribe(e=>{if(this.saveButtonClicked=!1,e instanceof Object)this.roles=[],this.fetchTocRoles(this.starHubUserToc),this.createdUserResponse=e,this.toastr.successToastr(l.a.USER_SAVE_SUCCESS_SECONDARY,l.a.USER_SAVE_SUCCESS_PRIMARY),this.logger.info("Logging success post API call - "+l.a.USER_SAVE_SUCCESS_SECONDARY,l.a.USER_SAVE_SUCCESS_PRIMARY),this.logger.info(e),this.newUserForm.reset(),this.ngOnInit();else if(this.postApiCallTestResponse=e,null!=this.postApiCallTestResponse){var r=this.postApiCallTestResponse.split("$");r[0].toString().includes(l.a.HTTP_STATUS_BADREQUEST.toString())||r[0].includes(l.a.HTTP_STATUS_UNAUTHORIZED_ACCESS.toString())||r[0].includes(l.a.HTTP_STATUS_FORBIDDEN.toString())||r[0].includes(l.a.HTTP_STATUS_NOT_ALLOWED.toString())?(this.toastr.errorToastr(r[1],r[0]),this.logger.error("Logging error on post service call Test -"+r[1],r[0]),this.logger.info(e)):r[0].includes(l.a.HTTP_STATUS_CONFLICT.toString())?(this.toastr.warningToastr(r[1],r[0]),this.logger.error("Logging error on post service call Test -"+r[1],r[0]),this.logger.info(e)):(this.roles=[],this.fetchTocRoles(this.starHubUserToc),this.toastr.successToastr(r[1],r[0]),this.logger.info("Logging success post API call Test - "+r[1],r[0]),this.logger.info(e),this.newUserForm.reset(),this.ngOnInit())}},r=>{this.saveButtonClicked=!1,this.errorMessagelogging=r,this.errorMessagelogging.errorMessage.includes("$")?this.errorMessagelogging.errorMessage.split("$")[0].includes(l.a.HTTP_STATUS_CONFLICT.toString())?(this.toastr.warningToastr(this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0]),this.logger.error("Logging error on post service call -"+this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0]),this.logger.error("Logging error on post service call -"+this.errorMessagelogging.errorMessage.split("$")[1],this.errorMessagelogging.errorMessage.split("$")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage),this.logger.error(this.errorMessagelogging.errorObject)),this.logger.error(e)}),this.newUserForm.markAsPristine(),this.newUserForm.markAsUntouched()}};v.ctorParameters=()=>[{type:a.a},{type:o.b},{type:d.b},{type:a.b},{type:u.a},{type:E.a},{type:c.c},{type:g.a},{type:S.a}],v=s.__decorate([Object(i.n)({selector:"app-newtisuser",template:s.__importDefault(t("gogO")).default,styles:[s.__importDefault(t("i0Xd")).default]}),s.__metadata("design:paramtypes",[a.a,o.b,d.b,a.b,u.a,E.a,c.c,g.a,S.a])],v);var A=t("KMHb");let C=class{constructor(e){this._userManagementService=e}resolve(e,r){return this._userManagementService.getTocs()}};C.ctorParameters=()=>[{type:u.a}],C=s.__decorate([Object(i.B)({providedIn:"root"}),s.__metadata("design:paramtypes",[u.a])],C);var D=t("q7wn");const R=[{path:"",component:v,resolve:{userDetail:A.a,tocs:C,landingPage:D.a}}];let x=class{};x=s.__decorate([Object(i.J)({imports:[a.c.forChild(R)],exports:[a.c]})],x);var P=t("5dmV"),k=t("IheW"),M=t("k5Gf");function F(e){return new M.a(e)}t.d(r,"HttpLoaderFactory",(function(){return F})),t.d(r,"NewtisuserModule",(function(){return I}));let I=class{};I=s.__decorate([Object(i.J)({imports:[n.b,P.a,d.f,d.k,x,c.b.forRoot({loader:{provide:c.a,useFactory:F,deps:[k.c]}}),o.a.forRoot(_.a.logging)],declarations:[v]})],I)},gogO:function(e,r,t){"use strict";t.r(r),r.default='<ng-template *ngIf="cannotViewPage then notShowAddUser ; else showAddUser">\r\n</ng-template>\r\n<ng-template #notShowAddUser>\r\n  <h2>{{\'Add_User.No Valid Permission\' | translate}}</h2>\r\n  <button mat-raised-button (click)="homePageNav()" type="button" class="homePage" color="primary">\r\n    {{\'HOME.Ok\' | translate}}\r\n  </button>\r\n</ng-template>\r\n<ng-template #showAddUser>\r\n  <mat-toolbar class = "applicationTitleToolbar" color="primary">\r\n    <span><img src="./assets/STAR_logo.png" style="width:50px;height:50px;padding-top: 10px;"></span>\r\n    <div class="far-end">\r\n      <span class="space-reducer"> {{\'HOME.Application name\' | translate}}</span>\r\n      <span class="space-reducer"> {{starHubUserTocName}}</span>\r\n    </div>\r\n    <span class="filler"></span>\r\n    <button mat-button (click)="homePageNav()" class="homePage" [disabled]="saveButtonClicked"  *ngIf="showToolbarButtons" class="application-titlebar-text-style">\r\n      <mat-icon >home</mat-icon>\r\n      <span class="application-titlebar-text-style">{{\'HOME.Home\' | translate}}</span>\r\n    </button>\r\n    <button mat-button type="button"  *ngIf="showToolbarButtons" [disabled]="saveButtonClicked" (click)="logout()" class="application-titlebar-text-style">\r\n      <mat-icon >logout</mat-icon>\r\n      <span class="application-titlebar-text-style">{{\'HOME.Logout\' | translate}}</span>\r\n    </button>\r\n    <button mat-button type="button"  *ngIf="showToolbarButtons" [disabled]="saveButtonClicked"  class="application-titlebar-text-style">\r\n      <mat-icon>help</mat-icon>\r\n      <span class="application-titlebar-text-style">{{\'HOME.Help\' | translate}}</span>\r\n    </button>\r\n    <button mat-icon-button type="button" *ngIf="!showToolbarButtons" [matMenuTriggerFor]="menu" class="application-titlebar-text-style1">\r\n      <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  </mat-toolbar>\r\n  <mat-menu  #menu="matMenu">\r\n    <button mat-menu-item (click)="homePageNav()">\r\n      <span>{{\'HOME.Home\' | translate}}</span>\r\n    </button>\r\n    <button mat-menu-item (click)="logout()">\r\n      <span>{{\'HOME.Logout\' | translate}}</span>\r\n    </button>\r\n    <button mat-menu-item>\r\n      <span>{{\'HOME.Help\' | translate}}</span>\r\n    </button>\r\n  </mat-menu>\r\n  \x3c!-- Header message for screen --\x3e\r\n  <fieldset class="headerFieldset">\r\n    <h2\xa0style="text-align:center"\xa0[title]="title">{{\xa0title\xa0}}</h2>\r\n  </fieldset>\r\n     <mat-card class="formFieldset-matcard">\r\n    <mat-card-content>\r\n      <div>\r\n        <form [formGroup]="newUserForm">\r\n          <fieldset [disabled]="saveButtonClicked" class="formFieldset">\r\n             \x3c!-- Show spinner while fetching data from service --\x3e\r\n              <div *ngIf="saveButtonClicked" class="lds-ellipsis">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n              </div>\r\n            <table>\r\n              <tr>\r\n                <td>\r\n                  <p [ngClass]="{ \'has-error\': isSubmitted && formControls.employeeId.errors }">\r\n                    \x3c!-- Empluyee ID field --\x3e\r\n                    <mat-form-field>\r\n                      <mat-label>{{\'Add_User.EmpId\' | translate}}</mat-label>\r\n                      <input tabindex="1" formControlName="employeeId" matInput required minlength="1" onkeypress="return /[a-zA-Z0-9]/i.test(event.key)" maxlength="12" name="employeeId"\r\n                        required>\r\n                      <mat-error *ngIf="newUserForm.invalid">{{\'Add_User.EmployeeId Validation\' | translate}}\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </p>\r\n                </td>\r\n                <td class="tablePaddingAlign" rowspan="4">\r\n                  \x3c!-- Roles field --\x3e\r\n                  <fieldset class="roleFieldset" style="width:160px">\r\n                    <legend>{{\'Add_User.RoleOutLine\' | translate}}</legend>\r\n                    \x3c!-- Handle if roles are available or show message for no roles --\x3e\r\n                    <div class="rolesFieldset">\r\n                      <ng-template *ngIf="showHideRoles;then showBlock; else notShowBlock">\r\n                      </ng-template>\r\n                      <ng-template #showBlock>\r\n                        <ng-container *ngFor="let role of roles"> \r\n                          <mat-checkbox class="checkBoxDisplay" [disabled]="disableEnableRoles || saveButtonClicked" tabindex="8"\r\n                            [checked]="role.isChecked" align=\'left\' formArrayName="roles"\r\n                            (change)="changeSelectedRole($event)" [value]="role.id" required>\r\n                            {{role.description}}\r\n                          </mat-checkbox>\r\n                        </ng-container>\r\n                      </ng-template>\r\n                      <ng-template #notShowBlock>\r\n                        {{\'Add_User.NO_ROLES_EXISTS\' | translate}}\r\n                      </ng-template>\r\n                    </div>\r\n                  </fieldset>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p [ngClass]="{ \'has-error\': isSubmitted && formControls.firstName.errors }">\r\n                    \x3c!-- First Name field --\x3e\r\n                    <mat-form-field class="full-width">\r\n                      <mat-label>{{\'Add_User.FirstName\' | translate}}</mat-label>\r\n                      <input tabindex="2" formControlName="firstName" onkeypress="return /[a-z]/i.test(event.key)" (input)="userDataModified()" maxlength="16"\r\n                        matInput required name="firstName" required>\r\n                      <mat-error *ngIf="newUserForm.invalid">{{\'Add_User.FirstName Validation\' | translate}}</mat-error>\r\n                    </mat-form-field>\r\n                  </p>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p [ngClass]="{ \'has-error\': isSubmitted && formControls.lastName.errors }">\r\n                    \x3c!-- Last name field --\x3e\r\n                    <mat-form-field class="full-width">\r\n                      <mat-label>{{\'Add_User.LastName\' | translate}}</mat-label>\r\n                      <input tabindex="3" formControlName="lastName" onkeypress="return /[a-z]/i.test(event.key)" (input)="userDataModified()" maxlength="35"\r\n                        matInput name="lastName" required>\r\n                      <mat-error *ngIf="newUserForm.invalid">{{\'Add_User.LastName Validation\' | translate}}</mat-error>\r\n                    </mat-form-field>\r\n                  </p>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <p [ngClass]="{ \'has-error\': isSubmitted && formControls.emailAddress.errors }">\r\n                    \x3c!-- Email Address field --\x3e\r\n                    <mat-form-field class="full-width">\r\n                      <mat-label>{{\'Add_User.EmailID\' | translate}}</mat-label>\r\n                      <input tabindex="4" matInput="email" (input)="userDataModified()" formControlName="emailAddress">\r\n                      <mat-error *ngIf="newUserForm.invalid">{{\'Add_User.Email Validation\' | translate}}</mat-error>\r\n                    </mat-form-field>\r\n                  </p>\r\n                </td>\r\n              </tr>\r\n              <ng-container *ngIf="hasDeletePermissions">\r\n                <tr>\r\n                  <td>\r\n                    <ng-container *ngIf="edit">\r\n                      \x3c!-- New user field --\x3e\r\n                      <mat-checkbox tabindex="5" name="markUserActiveInactive" [checked]="setUserActiveInactive"\r\n                        (change)="changeUserStatus($event)">\r\n                        {{activeInactiveCaption}}</mat-checkbox>\r\n                    </ng-container>\r\n                  </td>\r\n                  <td class="termination-date">\r\n                    <ng-container class="termination-date" *ngIf="showHideTerminationDate">\r\n                      <mat-label class="termination-date">{{\'Edit_User.TerminationDate\' | translate}}\r\n                        {{populateUserDetail.terminationDate |  date:\'dd MMMM yyyy\'}}</mat-label>\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </ng-container>\r\n              <tr>\r\n                <td class="tableForcePasswordChangePadding">\r\n                  <ng-container *ngIf="edit">\r\n                    \x3c!-- New user field --\x3e\r\n                    <mat-checkbox tabindex="6" name="forcePasswordChange" [disabled]="disableEnableForcedPwdChange"\r\n                      [checked]="isForcedPwdChangeRequired" (change)="changeForcePasswordChange($event)">\r\n                      {{\'Edit_User.ForcePasswordChange\' | translate}}</mat-checkbox>\r\n                  </ng-container>\r\n                </td>\r\n                <td></td>\r\n              </tr>\r\n            </table>\r\n\r\n            \x3c!-- Save and Reset button enable/disable based on different criteria Add/Edit/Form No Dirty etc.. --\x3e\r\n            <ng-template *ngIf="edit; then saveDisableForEdit; else saveForNewUser">\r\n            </ng-template>\r\n            <ng-template #saveDisableForEdit>\r\n              <p>\r\n                <button tabindex="9"  mat-button class = "button-style" mat-raised-button\r\n                  [disabled]="!newUserForm.valid || !formEdited || saveButtonClicked" (click)="save()" type="button"\r\n                  color="primary">{{\'Add_User.Save\' | translate}}</button>\r\n                <button tabindex="10"  mat-button class = "button-style" mat-raised-button\r\n                  [disabled]="!formEdited || saveButtonClicked" (click)="reset()" type="button"\r\n                  color="primary"> {{\'Add_User.Reset\' | translate}}\r\n                </button>\r\n              </p>\r\n            </ng-template>\r\n            <ng-template #saveForNewUser>\r\n              <p>\r\n                <button tabindex="9"  mat-button class = "button-style" mat-raised-button [disabled]="!newUserForm.valid || saveButtonClicked"\r\n                  (click)="save()" type="button" \r\n                  color="primary">{{\'Add_User.Save\' | translate}}</button>\r\n              </p>\r\n            </ng-template>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</ng-template>'},i0Xd:function(e,r,t){"use strict";t.r(r),r.default='/* @import "~@angular/material/prebuilt-themes/indigo-pink.css"; */\r\n.newUserForm{\r\n    min-width: 150px;\r\n    max-width: 450px;\r\n    width: 100%;\r\n  }\r\nmat-form-field {\r\n    /* color: #FFBF00 !important; */\r\n    margin-left: 10px;\r\n    font-size: 1.0em!important;\r\n}\r\nmat-checkbox {\r\n    margin-left: 10px;\r\n}\r\n.lastname{\r\nbackground-color: white;\r\n}\r\n.fieldset {\r\n    padding-left: 40px;\r\n    display: inline-block;\r\n   \r\n}\r\n.termination-date {\r\n    margin-left: 20px;\r\n}\r\n.toc-width {\r\n    width: 255px;\r\n    max-width: 255px;\r\n}\r\nbutton {\r\n    margin-left: 10px;\r\n}\r\n.formFieldset {\r\n    background-color: #EFEFEF; \r\n    min-width: 500px;\r\n    width: 32%;\r\n    border: white;\r\n    box-shadow:0 0 10px #666;\r\n   }\r\n.formFieldset-matcard {\r\n    display: -webkit-box;\r\n    display: flex;\r\n    margin-top: 1%; \r\n    padding-top: 0%;\r\n    min-width: 500px; \r\n    -webkit-box-pack: center; \r\n            justify-content: center; \r\n    -webkit-box-align: center; \r\n            align-items: center\r\n   }\r\n.filler {\r\n    -webkit-box-flex: 1;\r\n            flex: 1 1 auto;\r\n }\r\n.applicationTitleToolbar {\r\n    background-color: #3C3C35;\r\n    border:1px solid #666;\r\n    border-radius:10px;\r\n    box-shadow:0 0 10px #666;\r\n}\r\n.roleFieldset {\r\n    border: 0;\r\n}\r\n.headerFieldset {\r\n      background-color:#C5C5BF;\r\n      line-height: 20%;\r\n      border:1px solid #666;\r\n      border-radius:10px;\r\n      box-shadow:0 0 10px #666;\r\n  }\r\n.application-titlebar-text-style{\r\n    /* color: white;\r\n    border: transparent;\r\n    font-size: medium; */\r\n    width: auto;\r\n}\r\n.icon-color{\r\n    background-color: white;\r\n  }\r\n.menu-overflow-hidden {\r\n    overflow: hidden !important;\r\n  }\r\n.application-titlebar-text-style1{\r\n  color: white;\r\n  font-size: medium;\r\n  text-align: center;\r\n  background-color: transparent;\r\n  border: transparent;\r\n}\r\n.tablePaddingAlign{\r\n    padding-left: 10px;\r\n    vertical-align : top;\r\n    padding-top: 28px;\r\n}\r\n.mat-button:hover {\r\n    background: #455a64;\r\n  }\r\n.tableTocPadding{\r\n    padding-left: 10px;\r\n    padding-top: 0px;\r\n}\r\n.tableForcePasswordChangePadding{\r\n    padding-top: 5px;\r\n}\r\n.checkBoxDisplay {\r\n    display: block;\r\n    /* background-color: #C5C5BF; */\r\n  }\r\n.rolesFieldset {\r\n    width: 258px;\r\n    max-width: 260px;\r\n    max-height: 250px;\r\n    overflow-y: auto;\r\n    overflow-x: auto;\r\n    border: 1px solid black;\r\n\r\n}\r\n::ng-deep .mat-checkbox .mat-checkbox-frame {\r\n    border-color: #C5C5BF;\r\n  }\r\n/* ::ng-deep .mat-checkbox-focused .mat-checkbox-focused {\r\n    background-color: darkgreen !important;\r\n  }\r\n  \r\n  ::ng-deep .mat-checkbox-checked .mat-checkbox-background {\r\n    background-color: darkgreen !important;\r\n  } */\r\n.far-end{\r\n    font-size: medium;\r\n    padding-left: 7px;\r\n    padding-top: 7px;\r\n    display: inline-grid;\r\n    margin-bottom: auto;\r\n    color: white;\r\n    font-style: italic;\r\n    }\r\n.space-reducer{\r\n    max-height: 20px;\r\n}\r\n.button-style{\r\n    /* background-color: #263238;\r\n    color: white;\r\n    width: 80px; */\r\n    font-size: medium;\r\n    /* height: 30px; */\r\n}\r\n.lds-ellipsis {\r\n  background-color: #EFEFEF; \r\n  position: absolute;\r\n  width: 10px;\r\n  height: 5px;\r\n  top: 1.2%;\r\n  left: 45%;\r\n}\r\n.lds-ellipsis div {\r\n  position: absolute;\r\n  top: 2px;\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background:#3C3C35;\r\n  -webkit-animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n          animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n}\r\n.lds-ellipsis div:nth-child(1) {\r\n  left: 8px;\r\n  -webkit-animation: lds-ellipsis1 0.6s infinite;\r\n          animation: lds-ellipsis1 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(2) {\r\n  left: 8px;\r\n  -webkit-animation: lds-ellipsis2 0.6s infinite;\r\n          animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(3) {\r\n  left: 32px;\r\n  -webkit-animation: lds-ellipsis2 0.6s infinite;\r\n          animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(4) {\r\n  left: 56px;\r\n  -webkit-animation: lds-ellipsis3 0.6s infinite;\r\n          animation: lds-ellipsis3 0.6s infinite;\r\n}\r\n@-webkit-keyframes lds-ellipsis1 {\r\n  0% {\r\n    -webkit-transform: scale(0);\r\n            transform: scale(0);\r\n  }\r\n  100% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\r\n  }\r\n}\r\n@keyframes lds-ellipsis1 {\r\n  0% {\r\n    -webkit-transform: scale(0);\r\n            transform: scale(0);\r\n  }\r\n  100% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\r\n  }\r\n}\r\n@-webkit-keyframes lds-ellipsis3 {\r\n  0% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\r\n  }\r\n  100% {\r\n    -webkit-transform: scale(0);\r\n            transform: scale(0);\r\n  }\r\n}\r\n@keyframes lds-ellipsis3 {\r\n  0% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\r\n  }\r\n  100% {\r\n    -webkit-transform: scale(0);\r\n            transform: scale(0);\r\n  }\r\n}\r\n@-webkit-keyframes lds-ellipsis2 {\r\n  0% {\r\n    -webkit-transform: translate(0, 0);\r\n            transform: translate(0, 0);\r\n  }\r\n  100% {\r\n    -webkit-transform: translate(24px, 0);\r\n            transform: translate(24px, 0);\r\n  }\r\n}\r\n@keyframes lds-ellipsis2 {\r\n  0% {\r\n    -webkit-transform: translate(0, 0);\r\n            transform: translate(0, 0);\r\n  }\r\n  100% {\r\n    -webkit-transform: translate(24px, 0);\r\n            transform: translate(24px, 0);\r\n  }\r\n}'}}]);