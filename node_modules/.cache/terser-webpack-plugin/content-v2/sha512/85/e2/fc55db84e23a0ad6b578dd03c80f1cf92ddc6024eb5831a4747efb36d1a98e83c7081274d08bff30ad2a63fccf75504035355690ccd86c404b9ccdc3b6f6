{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{gU5p:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__);var tslib_es6=__webpack_require__(\"mrSG\"),core=__webpack_require__(\"8Y7J\"),common=__webpack_require__(\"SVse\"),fesm2015_router=__webpack_require__(\"iInd\"),ngx_logger=__webpack_require__(\"P4hB\"),constants=__webpack_require__(\"9Vv1\"),fesm2015_forms=__webpack_require__(\"s7LF\");class NewUser{}var ngx_translate_core=__webpack_require__(\"TSSN\"),ng6_toastr_notifications=__webpack_require__(\"pxtl\"),user_management_service=__webpack_require__(\"GqWp\");class UserDetails{}class PasswordChange{}class UserStatus{}var esm2015_dialog=__webpack_require__(\"s6ns\"),confirm_dialog_component=__webpack_require__(\"ZokB\"),esm2015_core=__webpack_require__(\"/q54\"),lib_esm=__webpack_require__(\"AL3R\"),environment=__webpack_require__(\"AytR\");let newtisuser_component_NewtisuserComponent=class{constructor(route,logger,formBuilder,router,userManagementService,media,translate,toastr,dialog){this.route=route,this.logger=logger,this.formBuilder=formBuilder,this.router=router,this.userManagementService=userManagementService,this.media=media,this.translate=translate,this.toastr=toastr,this.dialog=dialog,this.showHideRoles=!1,this.saveButtonClicked=!1,this.userTypes=[{value:constants.a.LIVE_USER_CODE,display:\"Live User\"}],this.languages=[{value:constants.a.DEFAULT_LANGUAGE_CODE,display:\"English UK\"}],this.applicationNames=[{val:constants.a.STAR_MOBILE_APP_CODE,disp:\"STARMobile app\"}],this.userDetails=[],this.tocs=[],this.roles=[],this.isForcedPwdChangeRequired=!1,this.setUserActiveInactive=!1,this.disableEnableForcedPwdChange=!1,this.disableEnableRoles=!1,this.showHideTerminationDate=!1,this.userRoles=[],this.lang=constants.a.SUPPORTED_LANGUAGES,this.editUser=constants.a.EDIT,this.edit=!1,this.formEdited=!1,this.windowSelectionCheck=!1,this.hasEditPermissions=!0,this.hasAddPermissions=!0,this.hasDeletePermissions=!0,this.starHubUserToc=\"\",this.starHubUserTocName=\"\",this.activeInactiveCaption=\"\",this.cannotViewPage=!1,this.href=\"\",this.title=\"\",this.alertResult=!1,this.currentScreenWidth=\"\",this.showToolbarButtons=!0,this.defaultLang=constants.a.DEFAULT_LANGUAGE,translate.addLangs(this.lang),translate.setDefaultLang(this.defaultLang),this.passwordChange=new PasswordChange,this.flexMediaWatcher=media.media$.subscribe(change=>{change.mqAlias!==this.currentScreenWidth&&(this.currentScreenWidth=change.mqAlias,this.setupTable())})}get defaultLang(){return this._defaultLang}set defaultLang(value){this._defaultLang=value}setupTable(){\"xs\"==this.currentScreenWidth||\"sm\"==this.currentScreenWidth?this.showToolbarButtons=!1:this.showToolbarButtons=!0}ngOnInit(){this.starHubUserToc=\"AW\";this.route.snapshot.paramMap;this.createUserForm();const selectDefaultUserType=this.userTypes.find(c=>c.value==constants.a.LIVE_USER_CODE);this.newUserForm.get(\"userType\").setValue(selectDefaultUserType.value);const defaultAppName=this.applicationNames.find(c=>c.val==constants.a.STAR_MOBILE_APP_CODE);if(this.newUserForm.get(\"Applications\").setValue(defaultAppName.val),this.href=this.router.url,this.href.includes(constants.a.EDIT)?(this.title=constants.a.TITLE_EDIT_USERS,this.hasEditPermissions||(this.cannotViewPage=!0)):this.href.includes(constants.a.USER_FORM)&&(this.title=constants.a.TITLE_ADD_USERS,this.hasAddPermissions||(this.cannotViewPage=!0)),this.userDetails=this.route.snapshot.data.userDetail,this.userDetails&&this.userDetails.length>0?(this.userDetail=this.userDetails[0],this.edit=!0,this.patchValuesToFormFields()):this.href.includes(constants.a.USER_FORM)?this.fetchTocRoles(this.starHubUserToc):this.router.navigate([constants.a.USER_LIST_FORM]),this.tocs=this.route.snapshot.data.tocs,null!=this.tocs){let filterResult=this.tocs.filter(u=>u.internalTocCode==this.starHubUserToc);if(null!=filterResult&&filterResult.length>0){let tocObject=filterResult[0];this.starHubUserTocName=tocObject.toc}this.tocs.sort((a,b)=>a.toc.localeCompare(b.toc))}}logout(){if(lib_esm.a.signOut({global:!0}),null==lib_esm.a.currentUserInfo()){localStorage.clear();const redirectUrlParams=window.location.href;window.location.href=environment.a.auth_ui_url+\"?redirect=\"+redirectUrlParams}}createUserForm(){this.newUserForm=this.formBuilder.group({employeeId:[\"\",fesm2015_forms.l.compose([fesm2015_forms.l.required,fesm2015_forms.l.minLength(constants.a.EMP_ID_MIN_LENGTH),fesm2015_forms.l.pattern(\"^[a-zA-Z0-9']+\")])],firstName:[\"\",fesm2015_forms.l.compose([fesm2015_forms.l.required,fesm2015_forms.l.pattern(\"^[a-zA-Z']+\")])],lastName:[\"\",fesm2015_forms.l.compose([fesm2015_forms.l.required,,fesm2015_forms.l.pattern(\"^[a-zA-Z']+\")])],emailAddress:[\"\",[fesm2015_forms.l.email]],Applications:[\"\",fesm2015_forms.l.required],languageCode:[constants.a.DEFAULT_LANGUAGE_CODE,fesm2015_forms.l.required],toc:[this.starHubUserToc,fesm2015_forms.l.required],password:[constants.a.DEFAULT_PASSWORD],userType:[\"\",fesm2015_forms.l.required],operatorId:[\"\"],manualPriceAuthorisation:[constants.a.MANUAL_PRICE_AUTH_CODE],storeId:[constants.a.STORE_ID],roles:this.formBuilder.array(this.roles,fesm2015_forms.l.required),forcePasswordChange:[]})}patchValuesToFormFields(){if(1==this.edit&&null!=this.userDetail){if(this.populateUserDetail=Object.assign({},this.userDetail),this.userRoles.length>0){this.userDetail.roles=[],this.populateUserDetail.roles=[];for(let i=0;i<this.userRoles.length;i++)this.userDetail.roles.push(this.userRoles[i]),this.populateUserDetail.roles.push(this.userRoles[i])}else for(let i=0;i<this.userDetail.roles.length;i++)this.userRoles.push(this.userDetail.roles[i]);this.fetchTocRoles(this.populateUserDetail.toc),this.userDetail.forcePwdChange?(this.isForcedPwdChangeRequired=!0,this.disableEnableForcedPwdChange=!0,this.passwordChange.isForcedPwdChangeRequired=!0):(this.isForcedPwdChangeRequired=!1,this.passwordChange.isForcedPwdChangeRequired=!1,this.disableEnableForcedPwdChange=!1),this.userDetail.terminationDate&&null!=this.userDetail.terminationDate?(this.showHideTerminationDate=!0,this.activeInactiveCaption=constants.a.MAKE_ACTIVE,this.setUserActiveInactive=!1,this.disableEnableRoles=!0,this.disableEnableForcedPwdChange=!0,this.newUserForm.controls.firstName.disable(),this.newUserForm.controls.lastName.disable(),this.newUserForm.controls.emailAddress.disable(),this.newUserForm.controls.roles.disable(),this.newUserForm.controls.forcePasswordChange.disable()):(this.disableEnableRoles=!1,this.setUserActiveInactive=!1,this.showHideTerminationDate=!1,this.activeInactiveCaption=constants.a.MAKE_INACTIVE),this.newUserForm.patchValue({employeeId:this.populateUserDetail.employeeId,toc:this.populateUserDetail.toc,firstName:this.populateUserDetail.firstName,lastName:this.populateUserDetail.lastName,role:this.populateUserDetail.roles,emailAddress:this.populateUserDetail.emailAddress}),this.newUserForm.controls.employeeId.disable()}}changeSelectedApplication(event){this.selectedAppId=event.value}changeForcePasswordChange(event){this.formEdited=!0,this.isForcedPwdChangeRequired=event.checked,this.passwordChange.isForcedPwdChangeRequired=event.checked,event.checked&&(this.setUserActiveInactive=!1)}changeUserStatus(event){!this.disableEnableForcedPwdChange&&this.isForcedPwdChangeRequired&&(this.isForcedPwdChangeRequired=!1,this.passwordChange.isForcedPwdChangeRequired=!1),this.formEdited=!0,this.setUserActiveInactive=event.checked}userDataModified(){this.edit&&(this.formEdited=!0)}homePageNav(){if(this.edit&&this.newUserForm.valid&&1==this.formEdited){const dialogData=new confirm_dialog_component.b;this.dialog.open(confirm_dialog_component.a,{data:dialogData}).afterClosed().subscribe(dialogResult=>{this.alertResult=dialogResult,this.alertResult&&this.router.navigate([constants.a.USER_LIST_FORM])})}else this.router.navigate([constants.a.USER_LIST_FORM])}fetchTocRoles(tocCode){this.logger.info(\"TOC Code send to service for pulling out roles details :\"+tocCode),this.userManagementService.getUserRoles(tocCode,this.selectedAppId).subscribe(data=>{if(this.roles=[],this.showHideRoles=!1,null!=data){var roleObjects=data;roleObjects.length>0&&(this.showHideRoles=!0,this.roles=roleObjects,this.roles.sort((a,b)=>a.description.localeCompare(b.description)),this.edit&&this.setRolesForEditUser())}},error=>{this.logger.error(error)})}setRolesForEditUser(){if(this.roles.length>0){const mobileRoles=this.newUserForm.get(\"roles\");let rolesObject=this.populateUserDetail.roles;for(let j=0;j<rolesObject.length;j++)for(let i=0;i<this.roles.length;i++)this.roles[i].id==rolesObject[j]&&(this.roles[i].isChecked=!0,mobileRoles.push(new fesm2015_forms.c(this.roles[i].id)))}}changeSelectedRole(event){this.formEdited=!0;const mobileRoles=this.newUserForm.get(\"roles\");if(event.checked)mobileRoles.push(new fesm2015_forms.c(event.source.value)),this.edit&&this.populateUserDetail.roles.push(event.source.value);else{const i=mobileRoles.controls.findIndex(x=>x.value===event.source.value);if(mobileRoles.removeAt(i),this.edit){const index=this.populateUserDetail.roles.indexOf(event.source.value);-1!==index&&this.populateUserDetail.roles.splice(index,1)}}}selectMatCheckBox(roleId){this.newUserForm.get(\"roles\").push(new fesm2015_forms.c(roleId))}reset(){this.roles=[],this.populateUserDetail.roles=[];const mobileRoles=this.newUserForm.get(\"roles\");let selectedRoles=[];if(null!=mobileRoles&&0!=mobileRoles.length){selectedRoles=mobileRoles.value.toString().split(\",\");for(let i=0;i<selectedRoles.length;i++){const j=mobileRoles.controls.findIndex(x=>x.value==selectedRoles[i]);mobileRoles.removeAt(j);const index=this.populateUserDetail.roles.indexOf(selectedRoles[i]);-1!==index&&this.populateUserDetail.roles.splice(index,1)}}this.patchValuesToFormFields(),this.formEdited=!1}save(){var firstName,lastName,eMail,empId;if(Object.keys(this.newUserForm.controls).forEach(key=>{const abstractControl=this.newUserForm.get(key);abstractControl instanceof fesm2015_forms.d||(\"employeeId\"==key?(empId=abstractControl.value,this.newUserForm.get(\"operatorId\").setValue(abstractControl.value)):\"firstName\"==key?firstName=abstractControl.value:\"lastName\"==key?lastName=abstractControl.value:\"emailAddress\"==key?eMail=abstractControl.value:this.logger.info(\"Save button clicked\"+abstractControl.value))}),1==this.edit){var updatedUser=new UserDetails;(updatedUser=this.populateUserDetail).firstName=firstName,updatedUser.lastName=lastName,updatedUser.emailAddress=eMail,updatedUser.storeId=constants.a.STORE_ID,\"\"==updatedUser.emailAddress&&(updatedUser.emailAddress=null),this.saveButtonClicked=!0,this.userDetail.forcePwdChange!=this.passwordChange.isForcedPwdChangeRequired?this.updateForcePasswordChangeFlag(empId,updatedUser):this.setUserActiveInactive?this.updateUserStatus(empId,updatedUser):this.updateUserDetails(updatedUser)}else this.addUserDeatils()}updateUserStatus(empId,updatedUser){this.logger.info(\"Json send to service for updating user status field for user:\"),this.userStatus=new UserStatus,this.setUserActiveInactive&&(this.showHideTerminationDate?this.userStatus.activeStateChangeAction=constants.a.USER_REACTIVATE:this.userStatus.activeStateChangeAction=constants.a.USER_TERMINATE),this.userManagementService.postChangeUserStatus(this.starHubUserToc,empId,this.userStatus).subscribe(data=>{this.checkModifiedFields()?this.updateUserDetails(updatedUser):(this.toastr.successToastr(constants.a.USER_UPDATED_SUCCESS_SECONDARY,constants.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info(\"Logging success updated user status by calling API \"+constants.a.USER_UPDATED_SUCCESS_SECONDARY,constants.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info(data),this.router.navigate([\"userlist\"]))},error=>{this.saveButtonClicked=!1,this.errorMessagelogging=error,this.errorMessagelogging.errorMessage.includes(\"$\")?(this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0]),this.logger.error(\"Logging error on post service call for userStatus -\"+this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage),this.logger.error(this.errorMessagelogging.errorObject)),this.logger.error(this.userStatus)})}updateForcePasswordChangeFlag(empId,updatedUser){this.logger.info(\"Json send to service for updating forcepasswordchange field for user:\"),this.userManagementService.postForcePasswordChange(this.starHubUserToc,empId,this.passwordChange).subscribe(data=>{this.checkModifiedFields()?this.updateUserDetails(updatedUser):(this.toastr.successToastr(constants.a.USER_UPDATED_SUCCESS_SECONDARY,constants.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info(\"Logging success updated forcepasswordchange by calling API \"+constants.a.USER_UPDATED_SUCCESS_SECONDARY,constants.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info(data),this.router.navigate([\"userlist\"]))},error=>{this.saveButtonClicked=!1,this.errorMessagelogging=error,this.errorMessagelogging.errorMessage.includes(\"$\")?(this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0]),this.logger.error(\"Logging error on post service call for forcepasswrodreset -\"+this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage),this.logger.error(this.errorMessagelogging.errorObject)),this.logger.error(this.passwordChange)})}checkModifiedFields(){let returnObject=!1;return this.populateUserDetail.firstName!=this.userDetail.firstName&&(returnObject=!0),this.populateUserDetail.lastName!=this.userDetail.lastName&&(returnObject=!0),this.populateUserDetail.emailAddress!=this.userDetail.emailAddress&&(returnObject=!0),JSON.stringify(this.populateUserDetail.roles)!=JSON.stringify(this.userRoles)&&(returnObject=!0),returnObject}updateUserDetails(updatedUser){this.logger.info(\"Json send to service for updating user details for user:\"),this.userManagementService.postUpdateUserDetails(updatedUser).subscribe(data=>{if(this.saveButtonClicked=!1,data instanceof Object)this.updatedUserResponse=data,this.toastr.successToastr(constants.a.USER_UPDATED_SUCCESS_SECONDARY,constants.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info(\"Logging success update Put API call - \"+constants.a.USER_UPDATED_SUCCESS_SECONDARY,constants.a.USER_UPDATED_SUCCESS_PRIMARY),this.logger.info(data),this.router.navigate([\"userlist\"]);else if(this.postApiCallTestResponse=data,null!=this.postApiCallTestResponse){var splits=this.postApiCallTestResponse.split(\"$\");splits[0].toString().includes(constants.a.HTTP_STATUS_BADREQUEST.toString())||splits[0].includes(constants.a.HTTP_STATUS_UNAUTHORIZED_ACCESS.toString())||splits[0].includes(constants.a.HTTP_STATUS_FORBIDDEN.toString())||splits[0].includes(constants.a.HTTP_STATUS_PAGE_NOT_FOUND.toString())||splits[0].includes(constants.a.HTTP_STATUS_NOT_ALLOWED.toString())?(this.toastr.errorToastr(splits[1],splits[0]),this.logger.error(\"Logging error on update Put service call Test -\"+splits[1],splits[0]),this.logger.info(data)):(this.toastr.successToastr(splits[1],splits[0]),this.logger.info(\"Logging success update Put API call Test - \"+splits[1],splits[0]),this.logger.info(data),this.router.navigate([\"userlist\"]))}},error=>{this.saveButtonClicked=!1,this.errorMessagelogging=error,this.errorMessagelogging.errorMessage.includes(\"$\")?(this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0]),this.logger.error(\"Logging error on update Put service call -\"+this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage),this.logger.error(this.errorMessagelogging.errorObject)),this.logger.error(updatedUser)})}addUserDeatils(){var enteredUser=new NewUser;\"\"==(enteredUser=this.newUserForm.value).emailAddress&&(enteredUser.emailAddress=null),this.logger.info(\"Jason send to service for saving New TIS user:\"+enteredUser),this.saveButtonClicked=!0,this.userManagementService.postUserDetails(enteredUser).subscribe(data=>{if(this.saveButtonClicked=!1,data instanceof Object)this.roles=[],this.fetchTocRoles(this.starHubUserToc),this.createdUserResponse=data,this.toastr.successToastr(constants.a.USER_SAVE_SUCCESS_SECONDARY,constants.a.USER_SAVE_SUCCESS_PRIMARY),this.logger.info(\"Logging success post API call - \"+constants.a.USER_SAVE_SUCCESS_SECONDARY,constants.a.USER_SAVE_SUCCESS_PRIMARY),this.logger.info(data),this.newUserForm.reset(),this.ngOnInit();else if(this.postApiCallTestResponse=data,null!=this.postApiCallTestResponse){var splits=this.postApiCallTestResponse.split(\"$\");splits[0].toString().includes(constants.a.HTTP_STATUS_BADREQUEST.toString())||splits[0].includes(constants.a.HTTP_STATUS_UNAUTHORIZED_ACCESS.toString())||splits[0].includes(constants.a.HTTP_STATUS_FORBIDDEN.toString())||splits[0].includes(constants.a.HTTP_STATUS_NOT_ALLOWED.toString())?(this.toastr.errorToastr(splits[1],splits[0]),this.logger.error(\"Logging error on post service call Test -\"+splits[1],splits[0]),this.logger.info(data)):splits[0].includes(constants.a.HTTP_STATUS_CONFLICT.toString())?(this.toastr.warningToastr(splits[1],splits[0]),this.logger.error(\"Logging error on post service call Test -\"+splits[1],splits[0]),this.logger.info(data)):(this.roles=[],this.fetchTocRoles(this.starHubUserToc),this.toastr.successToastr(splits[1],splits[0]),this.logger.info(\"Logging success post API call Test - \"+splits[1],splits[0]),this.logger.info(data),this.newUserForm.reset(),this.ngOnInit())}},error=>{this.saveButtonClicked=!1,this.errorMessagelogging=error,this.errorMessagelogging.errorMessage.includes(\"$\")?this.errorMessagelogging.errorMessage.split(\"$\")[0].includes(constants.a.HTTP_STATUS_CONFLICT.toString())?(this.toastr.warningToastr(this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0]),this.logger.error(\"Logging error on post service call -\"+this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0]),this.logger.error(\"Logging error on post service call -\"+this.errorMessagelogging.errorMessage.split(\"$\")[1],this.errorMessagelogging.errorMessage.split(\"$\")[0])):(this.toastr.errorToastr(this.errorMessagelogging.errorMessage),this.logger.error(this.errorMessagelogging.errorObject)),this.logger.error(enteredUser)}),this.newUserForm.markAsPristine(),this.newUserForm.markAsUntouched()}};newtisuser_component_NewtisuserComponent.ctorParameters=()=>[{type:fesm2015_router.a},{type:ngx_logger.b},{type:fesm2015_forms.b},{type:fesm2015_router.b},{type:user_management_service.a},{type:esm2015_core.a},{type:ngx_translate_core.c},{type:ng6_toastr_notifications.a},{type:esm2015_dialog.a}],newtisuser_component_NewtisuserComponent=tslib_es6.__decorate([Object(core.n)({selector:\"app-newtisuser\",template:tslib_es6.__importDefault(__webpack_require__(\"gogO\")).default,styles:[tslib_es6.__importDefault(__webpack_require__(\"i0Xd\")).default]}),tslib_es6.__metadata(\"design:paramtypes\",[fesm2015_router.a,ngx_logger.b,fesm2015_forms.b,fesm2015_router.b,user_management_service.a,esm2015_core.a,ngx_translate_core.c,ng6_toastr_notifications.a,esm2015_dialog.a])],newtisuser_component_NewtisuserComponent);var user_details_resolver_service=__webpack_require__(\"KMHb\");let TocsResolverService=class{constructor(_userManagementService){this._userManagementService=_userManagementService}resolve(route,state){return this._userManagementService.getTocs()}};TocsResolverService.ctorParameters=()=>[{type:user_management_service.a}],TocsResolverService=tslib_es6.__decorate([Object(core.B)({providedIn:\"root\"}),tslib_es6.__metadata(\"design:paramtypes\",[user_management_service.a])],TocsResolverService);var landing_page_resolver_service=__webpack_require__(\"q7wn\");const routes=[{path:\"\",component:newtisuser_component_NewtisuserComponent,resolve:{userDetail:user_details_resolver_service.a,tocs:TocsResolverService,landingPage:landing_page_resolver_service.a}}];let NewtisuserRoutingModule=class{};NewtisuserRoutingModule=tslib_es6.__decorate([Object(core.J)({imports:[fesm2015_router.c.forChild(routes)],exports:[fesm2015_router.c]})],NewtisuserRoutingModule);var material_module=__webpack_require__(\"5dmV\"),fesm2015_http=__webpack_require__(\"IheW\"),ngx_translate_http_loader=__webpack_require__(\"k5Gf\");function HttpLoaderFactory(http){return new ngx_translate_http_loader.a(http)}__webpack_require__.d(__webpack_exports__,\"HttpLoaderFactory\",(function(){return HttpLoaderFactory})),__webpack_require__.d(__webpack_exports__,\"NewtisuserModule\",(function(){return NewtisuserModule}));let NewtisuserModule=class{};NewtisuserModule=tslib_es6.__decorate([Object(core.J)({imports:[common.b,material_module.a,fesm2015_forms.f,fesm2015_forms.k,NewtisuserRoutingModule,ngx_translate_core.b.forRoot({loader:{provide:ngx_translate_core.a,useFactory:HttpLoaderFactory,deps:[fesm2015_http.c]}}),ngx_logger.a.forRoot(environment.a.logging)],declarations:[newtisuser_component_NewtisuserComponent]})],NewtisuserModule)},gogO:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<ng-template *ngIf=\"cannotViewPage then notShowAddUser ; else showAddUser\">\\r\\n</ng-template>\\r\\n<ng-template #notShowAddUser>\\r\\n  <h2>{{\\'Add_User.No Valid Permission\\' | translate}}</h2>\\r\\n  <button mat-raised-button (click)=\"homePageNav()\" type=\"button\" class=\"homePage\" color=\"primary\">\\r\\n    {{\\'HOME.Ok\\' | translate}}\\r\\n  </button>\\r\\n</ng-template>\\r\\n<ng-template #showAddUser>\\r\\n  <mat-toolbar class = \"applicationTitleToolbar\" color=\"primary\">\\r\\n    <span><img src=\"./assets/STAR_logo.png\" style=\"width:50px;height:50px;padding-top: 10px;\"></span>\\r\\n    <div class=\"far-end\">\\r\\n      <span class=\"space-reducer\"> {{\\'HOME.Application name\\' | translate}}</span>\\r\\n      <span class=\"space-reducer\"> {{starHubUserTocName}}</span>\\r\\n    </div>\\r\\n    <span class=\"filler\"></span>\\r\\n    <button mat-button (click)=\"homePageNav()\" class=\"homePage\" [disabled]=\"saveButtonClicked\"  *ngIf=\"showToolbarButtons\" class=\"application-titlebar-text-style\">\\r\\n      <mat-icon >home</mat-icon>\\r\\n      <span class=\"application-titlebar-text-style\">{{\\'HOME.Home\\' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-button type=\"button\"  *ngIf=\"showToolbarButtons\" [disabled]=\"saveButtonClicked\" (click)=\"logout()\" class=\"application-titlebar-text-style\">\\r\\n      <mat-icon >logout</mat-icon>\\r\\n      <span class=\"application-titlebar-text-style\">{{\\'HOME.Logout\\' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-button type=\"button\"  *ngIf=\"showToolbarButtons\" [disabled]=\"saveButtonClicked\"  class=\"application-titlebar-text-style\">\\r\\n      <mat-icon>help</mat-icon>\\r\\n      <span class=\"application-titlebar-text-style\">{{\\'HOME.Help\\' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-icon-button type=\"button\" *ngIf=\"!showToolbarButtons\" [matMenuTriggerFor]=\"menu\" class=\"application-titlebar-text-style1\">\\r\\n      <mat-icon>more_vert</mat-icon>\\r\\n  </button>\\r\\n  </mat-toolbar>\\r\\n  <mat-menu  #menu=\"matMenu\">\\r\\n    <button mat-menu-item (click)=\"homePageNav()\">\\r\\n      <span>{{\\'HOME.Home\\' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-menu-item (click)=\"logout()\">\\r\\n      <span>{{\\'HOME.Logout\\' | translate}}</span>\\r\\n    </button>\\r\\n    <button mat-menu-item>\\r\\n      <span>{{\\'HOME.Help\\' | translate}}</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n  \\x3c!-- Header message for screen --\\x3e\\r\\n  <fieldset class=\"headerFieldset\">\\r\\n    <h2 style=\"text-align:center\" [title]=\"title\">{{ title }}</h2>\\r\\n  </fieldset>\\r\\n     <mat-card class=\"formFieldset-matcard\">\\r\\n    <mat-card-content>\\r\\n      <div>\\r\\n        <form [formGroup]=\"newUserForm\">\\r\\n          <fieldset [disabled]=\"saveButtonClicked\" class=\"formFieldset\">\\r\\n             \\x3c!-- Show spinner while fetching data from service --\\x3e\\r\\n              <div *ngIf=\"saveButtonClicked\" class=\"lds-ellipsis\">\\r\\n                <div></div>\\r\\n                <div></div>\\r\\n                <div></div>\\r\\n                <div></div>\\r\\n              </div>\\r\\n            <table>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <p [ngClass]=\"{ \\'has-error\\': isSubmitted && formControls.employeeId.errors }\">\\r\\n                    \\x3c!-- Empluyee ID field --\\x3e\\r\\n                    <mat-form-field>\\r\\n                      <mat-label>{{\\'Add_User.EmpId\\' | translate}}</mat-label>\\r\\n                      <input tabindex=\"1\" formControlName=\"employeeId\" matInput required minlength=\"1\" onkeypress=\"return /[a-zA-Z0-9]/i.test(event.key)\" maxlength=\"12\" name=\"employeeId\"\\r\\n                        required>\\r\\n                      <mat-error *ngIf=\"newUserForm.invalid\">{{\\'Add_User.EmployeeId Validation\\' | translate}}\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                </td>\\r\\n                <td class=\"tablePaddingAlign\" rowspan=\"4\">\\r\\n                  \\x3c!-- Roles field --\\x3e\\r\\n                  <fieldset class=\"roleFieldset\" style=\"width:160px\">\\r\\n                    <legend>{{\\'Add_User.RoleOutLine\\' | translate}}</legend>\\r\\n                    \\x3c!-- Handle if roles are available or show message for no roles --\\x3e\\r\\n                    <div class=\"rolesFieldset\">\\r\\n                      <ng-template *ngIf=\"showHideRoles;then showBlock; else notShowBlock\">\\r\\n                      </ng-template>\\r\\n                      <ng-template #showBlock>\\r\\n                        <ng-container *ngFor=\"let role of roles\"> \\r\\n                          <mat-checkbox class=\"checkBoxDisplay\" [disabled]=\"disableEnableRoles || saveButtonClicked\" tabindex=\"8\"\\r\\n                            [checked]=\"role.isChecked\" align=\\'left\\' formArrayName=\"roles\"\\r\\n                            (change)=\"changeSelectedRole($event)\" [value]=\"role.id\" required>\\r\\n                            {{role.description}}\\r\\n                          </mat-checkbox>\\r\\n                        </ng-container>\\r\\n                      </ng-template>\\r\\n                      <ng-template #notShowBlock>\\r\\n                        {{\\'Add_User.NO_ROLES_EXISTS\\' | translate}}\\r\\n                      </ng-template>\\r\\n                    </div>\\r\\n                  </fieldset>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <p [ngClass]=\"{ \\'has-error\\': isSubmitted && formControls.firstName.errors }\">\\r\\n                    \\x3c!-- First Name field --\\x3e\\r\\n                    <mat-form-field class=\"full-width\">\\r\\n                      <mat-label>{{\\'Add_User.FirstName\\' | translate}}</mat-label>\\r\\n                      <input tabindex=\"2\" formControlName=\"firstName\" onkeypress=\"return /[a-z]/i.test(event.key)\" (input)=\"userDataModified()\" maxlength=\"16\"\\r\\n                        matInput required name=\"firstName\" required>\\r\\n                      <mat-error *ngIf=\"newUserForm.invalid\">{{\\'Add_User.FirstName Validation\\' | translate}}</mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <p [ngClass]=\"{ \\'has-error\\': isSubmitted && formControls.lastName.errors }\">\\r\\n                    \\x3c!-- Last name field --\\x3e\\r\\n                    <mat-form-field class=\"full-width\">\\r\\n                      <mat-label>{{\\'Add_User.LastName\\' | translate}}</mat-label>\\r\\n                      <input tabindex=\"3\" formControlName=\"lastName\" onkeypress=\"return /[a-z]/i.test(event.key)\" (input)=\"userDataModified()\" maxlength=\"35\"\\r\\n                        matInput name=\"lastName\" required>\\r\\n                      <mat-error *ngIf=\"newUserForm.invalid\">{{\\'Add_User.LastName Validation\\' | translate}}</mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <p [ngClass]=\"{ \\'has-error\\': isSubmitted && formControls.emailAddress.errors }\">\\r\\n                    \\x3c!-- Email Address field --\\x3e\\r\\n                    <mat-form-field class=\"full-width\">\\r\\n                      <mat-label>{{\\'Add_User.EmailID\\' | translate}}</mat-label>\\r\\n                      <input tabindex=\"4\" matInput=\"email\" (input)=\"userDataModified()\" formControlName=\"emailAddress\">\\r\\n                      <mat-error *ngIf=\"newUserForm.invalid\">{{\\'Add_User.Email Validation\\' | translate}}</mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </p>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <ng-container *ngIf=\"hasDeletePermissions\">\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <ng-container *ngIf=\"edit\">\\r\\n                      \\x3c!-- New user field --\\x3e\\r\\n                      <mat-checkbox tabindex=\"5\" name=\"markUserActiveInactive\" [checked]=\"setUserActiveInactive\"\\r\\n                        (change)=\"changeUserStatus($event)\">\\r\\n                        {{activeInactiveCaption}}</mat-checkbox>\\r\\n                    </ng-container>\\r\\n                  </td>\\r\\n                  <td class=\"termination-date\">\\r\\n                    <ng-container class=\"termination-date\" *ngIf=\"showHideTerminationDate\">\\r\\n                      <mat-label class=\"termination-date\">{{\\'Edit_User.TerminationDate\\' | translate}}\\r\\n                        {{populateUserDetail.terminationDate |  date:\\'dd MMMM yyyy\\'}}</mat-label>\\r\\n                    </ng-container>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-container>\\r\\n              <tr>\\r\\n                <td class=\"tableForcePasswordChangePadding\">\\r\\n                  <ng-container *ngIf=\"edit\">\\r\\n                    \\x3c!-- New user field --\\x3e\\r\\n                    <mat-checkbox tabindex=\"6\" name=\"forcePasswordChange\" [disabled]=\"disableEnableForcedPwdChange\"\\r\\n                      [checked]=\"isForcedPwdChangeRequired\" (change)=\"changeForcePasswordChange($event)\">\\r\\n                      {{\\'Edit_User.ForcePasswordChange\\' | translate}}</mat-checkbox>\\r\\n                  </ng-container>\\r\\n                </td>\\r\\n                <td></td>\\r\\n              </tr>\\r\\n            </table>\\r\\n\\r\\n            \\x3c!-- Save and Reset button enable/disable based on different criteria Add/Edit/Form No Dirty etc.. --\\x3e\\r\\n            <ng-template *ngIf=\"edit; then saveDisableForEdit; else saveForNewUser\">\\r\\n            </ng-template>\\r\\n            <ng-template #saveDisableForEdit>\\r\\n              <p>\\r\\n                <button tabindex=\"9\"  mat-button class = \"button-style\" mat-raised-button\\r\\n                  [disabled]=\"!newUserForm.valid || !formEdited || saveButtonClicked\" (click)=\"save()\" type=\"button\"\\r\\n                  color=\"primary\">{{\\'Add_User.Save\\' | translate}}</button>\\r\\n                <button tabindex=\"10\"  mat-button class = \"button-style\" mat-raised-button\\r\\n                  [disabled]=\"!formEdited || saveButtonClicked\" (click)=\"reset()\" type=\"button\"\\r\\n                  color=\"primary\"> {{\\'Add_User.Reset\\' | translate}}\\r\\n                </button>\\r\\n              </p>\\r\\n            </ng-template>\\r\\n            <ng-template #saveForNewUser>\\r\\n              <p>\\r\\n                <button tabindex=\"9\"  mat-button class = \"button-style\" mat-raised-button [disabled]=\"!newUserForm.valid || saveButtonClicked\"\\r\\n                  (click)=\"save()\" type=\"button\" \\r\\n                  color=\"primary\">{{\\'Add_User.Save\\' | translate}}</button>\\r\\n              </p>\\r\\n            </ng-template>\\r\\n          </fieldset>\\r\\n        </form>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\\r\\n</ng-template>'},i0Xd:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='/* @import \"~@angular/material/prebuilt-themes/indigo-pink.css\"; */\\r\\n.newUserForm{\\r\\n    min-width: 150px;\\r\\n    max-width: 450px;\\r\\n    width: 100%;\\r\\n  }\\r\\nmat-form-field {\\r\\n    /* color: #FFBF00 !important; */\\r\\n    margin-left: 10px;\\r\\n    font-size: 1.0em!important;\\r\\n}\\r\\nmat-checkbox {\\r\\n    margin-left: 10px;\\r\\n}\\r\\n.lastname{\\r\\nbackground-color: white;\\r\\n}\\r\\n.fieldset {\\r\\n    padding-left: 40px;\\r\\n    display: inline-block;\\r\\n   \\r\\n}\\r\\n.termination-date {\\r\\n    margin-left: 20px;\\r\\n}\\r\\n.toc-width {\\r\\n    width: 255px;\\r\\n    max-width: 255px;\\r\\n}\\r\\nbutton {\\r\\n    margin-left: 10px;\\r\\n}\\r\\n.formFieldset {\\r\\n    background-color: #EFEFEF; \\r\\n    min-width: 500px;\\r\\n    width: 32%;\\r\\n    border: white;\\r\\n    box-shadow:0 0 10px #666;\\r\\n   }\\r\\n.formFieldset-matcard {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    margin-top: 1%; \\r\\n    padding-top: 0%;\\r\\n    min-width: 500px; \\r\\n    -webkit-box-pack: center; \\r\\n            justify-content: center; \\r\\n    -webkit-box-align: center; \\r\\n            align-items: center\\r\\n   }\\r\\n.filler {\\r\\n    -webkit-box-flex: 1;\\r\\n            flex: 1 1 auto;\\r\\n }\\r\\n.applicationTitleToolbar {\\r\\n    background-color: #3C3C35;\\r\\n    border:1px solid #666;\\r\\n    border-radius:10px;\\r\\n    box-shadow:0 0 10px #666;\\r\\n}\\r\\n.roleFieldset {\\r\\n    border: 0;\\r\\n}\\r\\n.headerFieldset {\\r\\n      background-color:#C5C5BF;\\r\\n      line-height: 20%;\\r\\n      border:1px solid #666;\\r\\n      border-radius:10px;\\r\\n      box-shadow:0 0 10px #666;\\r\\n  }\\r\\n.application-titlebar-text-style{\\r\\n    /* color: white;\\r\\n    border: transparent;\\r\\n    font-size: medium; */\\r\\n    width: auto;\\r\\n}\\r\\n.icon-color{\\r\\n    background-color: white;\\r\\n  }\\r\\n.menu-overflow-hidden {\\r\\n    overflow: hidden !important;\\r\\n  }\\r\\n.application-titlebar-text-style1{\\r\\n  color: white;\\r\\n  font-size: medium;\\r\\n  text-align: center;\\r\\n  background-color: transparent;\\r\\n  border: transparent;\\r\\n}\\r\\n.tablePaddingAlign{\\r\\n    padding-left: 10px;\\r\\n    vertical-align : top;\\r\\n    padding-top: 28px;\\r\\n}\\r\\n.mat-button:hover {\\r\\n    background: #455a64;\\r\\n  }\\r\\n.tableTocPadding{\\r\\n    padding-left: 10px;\\r\\n    padding-top: 0px;\\r\\n}\\r\\n.tableForcePasswordChangePadding{\\r\\n    padding-top: 5px;\\r\\n}\\r\\n.checkBoxDisplay {\\r\\n    display: block;\\r\\n    /* background-color: #C5C5BF; */\\r\\n  }\\r\\n.rolesFieldset {\\r\\n    width: 258px;\\r\\n    max-width: 260px;\\r\\n    max-height: 250px;\\r\\n    overflow-y: auto;\\r\\n    overflow-x: auto;\\r\\n    border: 1px solid black;\\r\\n\\r\\n}\\r\\n::ng-deep .mat-checkbox .mat-checkbox-frame {\\r\\n    border-color: #C5C5BF;\\r\\n  }\\r\\n/* ::ng-deep .mat-checkbox-focused .mat-checkbox-focused {\\r\\n    background-color: darkgreen !important;\\r\\n  }\\r\\n  \\r\\n  ::ng-deep .mat-checkbox-checked .mat-checkbox-background {\\r\\n    background-color: darkgreen !important;\\r\\n  } */\\r\\n.far-end{\\r\\n    font-size: medium;\\r\\n    padding-left: 7px;\\r\\n    padding-top: 7px;\\r\\n    display: inline-grid;\\r\\n    margin-bottom: auto;\\r\\n    color: white;\\r\\n    font-style: italic;\\r\\n    }\\r\\n.space-reducer{\\r\\n    max-height: 20px;\\r\\n}\\r\\n.button-style{\\r\\n    /* background-color: #263238;\\r\\n    color: white;\\r\\n    width: 80px; */\\r\\n    font-size: medium;\\r\\n    /* height: 30px; */\\r\\n}\\r\\n.lds-ellipsis {\\r\\n  background-color: #EFEFEF; \\r\\n  position: absolute;\\r\\n  width: 10px;\\r\\n  height: 5px;\\r\\n  top: 1.2%;\\r\\n  left: 45%;\\r\\n}\\r\\n.lds-ellipsis div {\\r\\n  position: absolute;\\r\\n  top: 2px;\\r\\n  width: 8px;\\r\\n  height: 8px;\\r\\n  border-radius: 50%;\\r\\n  background:#3C3C35;\\r\\n  -webkit-animation-timing-function: cubic-bezier(0, 1, 1, 0);\\r\\n          animation-timing-function: cubic-bezier(0, 1, 1, 0);\\r\\n}\\r\\n.lds-ellipsis div:nth-child(1) {\\r\\n  left: 8px;\\r\\n  -webkit-animation: lds-ellipsis1 0.6s infinite;\\r\\n          animation: lds-ellipsis1 0.6s infinite;\\r\\n}\\r\\n.lds-ellipsis div:nth-child(2) {\\r\\n  left: 8px;\\r\\n  -webkit-animation: lds-ellipsis2 0.6s infinite;\\r\\n          animation: lds-ellipsis2 0.6s infinite;\\r\\n}\\r\\n.lds-ellipsis div:nth-child(3) {\\r\\n  left: 32px;\\r\\n  -webkit-animation: lds-ellipsis2 0.6s infinite;\\r\\n          animation: lds-ellipsis2 0.6s infinite;\\r\\n}\\r\\n.lds-ellipsis div:nth-child(4) {\\r\\n  left: 56px;\\r\\n  -webkit-animation: lds-ellipsis3 0.6s infinite;\\r\\n          animation: lds-ellipsis3 0.6s infinite;\\r\\n}\\r\\n@-webkit-keyframes lds-ellipsis1 {\\r\\n  0% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: scale(1);\\r\\n            transform: scale(1);\\r\\n  }\\r\\n}\\r\\n@keyframes lds-ellipsis1 {\\r\\n  0% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: scale(1);\\r\\n            transform: scale(1);\\r\\n  }\\r\\n}\\r\\n@-webkit-keyframes lds-ellipsis3 {\\r\\n  0% {\\r\\n    -webkit-transform: scale(1);\\r\\n            transform: scale(1);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n}\\r\\n@keyframes lds-ellipsis3 {\\r\\n  0% {\\r\\n    -webkit-transform: scale(1);\\r\\n            transform: scale(1);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: scale(0);\\r\\n            transform: scale(0);\\r\\n  }\\r\\n}\\r\\n@-webkit-keyframes lds-ellipsis2 {\\r\\n  0% {\\r\\n    -webkit-transform: translate(0, 0);\\r\\n            transform: translate(0, 0);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: translate(24px, 0);\\r\\n            transform: translate(24px, 0);\\r\\n  }\\r\\n}\\r\\n@keyframes lds-ellipsis2 {\\r\\n  0% {\\r\\n    -webkit-transform: translate(0, 0);\\r\\n            transform: translate(0, 0);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: translate(24px, 0);\\r\\n            transform: translate(24px, 0);\\r\\n  }\\r\\n}'}}]);","extractedComments":[]}